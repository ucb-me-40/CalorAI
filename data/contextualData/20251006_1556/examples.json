[
    {
        "problem_title": "heatExchangerPyCalor",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Control Volumes",
        "lecture_reference": {
            "lecture_id": "1_97hqf37r",
            "subtopics": [
                {
                    "key": "Fa25-L5c-2.0",
                    "title": "Heat Exchanger"
                }
            ]
        },
        "book_reference": {
            "chapter_number": 5,
            "title": "Mass and Energy Analysis of Control Volumes",
            "sections": [
                "Some Steady-Flow Engineering Devices"
            ]
        },
        "notes": "",
        "problem_statement_raw": "R-134a enters a heat exchanger as a vapor with a mass flow rate of 6 kg/min and leaves as a subcooled liquid. It is cooled by water that enters the heat exchanger at 15$^\\circ$C and 300 kPa and exits at 25$^\\circ$C. R-134a enters the heat exchanger at 70$^\\circ$C and 1 MPa and leaves at 35$^\\circ$C. \n\nGoal: \n* Determine the mass flow rate of the cooling water.\n* Determine the heat transfer rate from the refrigerant to the water.",
        "physical_laws_and_assumptions": "Schematic\nDraw a heat exchanger with two control volumes: One for water and the other for the refrigerant (R-134a). \n\nAssumptions and Approximations\n* Neglect kinetic and potential energy\n* Steady-flow system\n* Determine properties using `pyCalor`.  \n* We assume that there is no pressure drop across the heat exchanger from the inlets to the outlets. \n    \nPhysical Laws and Governing Equations\nWater control volume, state 1 to 2\nConservation of mass:\n$$\\frac{dm_\\text{CV}}{dt} = \\dot{m}_\\text{in} - \\dot{m}_\\text{out} $$\n\nSteady flow:\n$$0 = \\dot{m}_\\text{in} - \\dot{m}_\\text{out} $$\n$$\\dot{m}_\\text{in} = \\dot{m}_\\text{out} = \\dot{m}_\\text{water}$$\n\nConservation of energy:\nConservation of mass:\n$$\\frac{dE_\\text{CV}}{dt} = \\dot{E}_\\text{in} - \\dot{E}_\\text{out} $$\n\nSteady flow:\n$$0 = \\dot{E}_\\text{in} - \\dot{E}_\\text{out} $$\n$$\\dot{E}_\\text{in} = \\dot{E}_\\text{out}$$\n\n$$\\dot{W}_\\text{in} + \\dot{Q}_\\text{in} + \\dot{m}_\\text{water} \\left(h_1 + (w_1^2/2) + g z_1 \\right) = \\dot{W}_\\text{out} + \\dot{Q}_\\text{out} + \\dot{m}_\\text{water} \\left(h_2 + (w_2^2/2) + g z_2 \\right)$$\n\nNeglecting changes in kinetic and potential energy; no work transfer; heat is transferred into the water:\n$$\\left( \\dot{Q}_\\text{in} \\right)_\\text{water} = \\dot{m}_\\text{water} \\left( h_2 - h_1 \\right)$$\n\nR-134a control volume, state 3 to 4\nConservation of mass:\n$$\\frac{dm_\\text{CV}}{dt} = \\dot{m}_\\text{in} - \\dot{m}_\\text{out} $$\n\nSteady flow:\n$$0 = \\dot{m}_\\text{in} - \\dot{m}_\\text{out} $$\n$$\\dot{m}_\\text{in} = \\dot{m}_\\text{out} = \\dot{m}_\\text{R-134a}$$\n\nSteady flow:\n$$0 = \\dot{E}_\\text{in} - \\dot{E}_\\text{out} $$\n$$\\dot{E}_\\text{in} = \\dot{E}_\\text{out}$$\n\n$$\\dot{W}_\\text{in} + \\dot{Q}_\\text{in} + \\dot{m}_\\text{R-134a} \\left(h_3 + (w_3^2/2) + g z_3 \\right) = \\dot{W}_\\text{out} + \\dot{Q}_\\text{out} + \\dot{m}_\\text{R-134a} \\left(h_4 + (w_4^2/2) + g z_4 \\right)$$\n\nNeglecting changes in kinetic and potential energy; no work transfer; heat is transferred out of the refrigerant:\n$$\\left( \\dot{Q}_\\text{out} \\right)_\\text{R-134a} = \\dot{m}_\\text{R-134a} \\left( h_3 - h_4 \\right)$$\n\nCombining water and R-134a control volumes\nThere is no heat or work transferred in or out of the heat exchanger; therefore:\n\n$$\\left( \\dot{Q}_\\text{out} \\right)_\\text{R-134a} = \\left( \\dot{Q}_\\text{in} \\right)_\\text{water}$$\n\nTherefore, we can combine the above equations and solve for the water mass flow rate:\n\n$\\dot{m}_\\text{water} = \\dot{m}_\\text{R-134a} \\frac{\\left( h_3 - h_4 \\right)}{\\left( h_2 - h_1 \\right)}$\n\nWe see from this that we need to know the enthalpies at the inlets and outlets of the heat exchanger. From that we can calculate the water mass flow rate. ",
        "solution_code": [
            {
                "step_name": "Properties",
                "code": [
                    "# Water is used to cool a refrigerant (R-134a). ",
                    "!pip install pyCalor",
                    "from pyCalor import thermo as th",
                    "",
                    "# Here are the inlet (state 1) and outlet (state 2) conditions of the water:",
                    "# state 1",
                    "T1_K = 15+273.15",
                    "p1_MPa = 300/1000",
                    "water_1 = th.state('water',p=(p1_MPa,'Mpa'),T=(T1_K,'K'),name='1')",
                    "h1_kJperKg = water_1.h # kJ/kg",
                    "",
                    "# state 2",
                    "T2_K = 25+273.15",
                    "p2_MPa = p1_MPa",
                    "water_2 = th.state('water',p=(p2_MPa,'Mpa'),T=(T2_K,'K'),name='2')",
                    "h2_kJperKg = water_2.h # kJ/kg",
                    "",
                    "# convert to SI units",
                    "h1_JperKg = h1_kJperKg*1000; print(h1_JperKg) # J/kg",
                    "h2_JperKg = h2_kJperKg*1000; print(h2_JperKg) # J/kg",
                    "",
                    "# Here are the inlet (state 3) and outlet (state 4) properties of the refrigerant as well as its mass flow rate, which is given:",
                    "fluid = 'R134a'",
                    "",
                    "# state 3",
                    "T3_K = 70+273.15",
                    "p3_Pa = 1e6",
                    "st3 = th.state(fluid,p=(p3_Pa,'Pa'),T=(T3_K,'K'),name='3')",
                    "h3_JperKg = st3.h*1e3",
                    "",
                    "# state 4",
                    "T4_K = 35+273.15",
                    "p4_Pa = p3_Pa",
                    "st4 = th.state(fluid,p=(p4_Pa,'Pa'),T=(T4_K,'K'),name='4')",
                    "h4_JperKg = st4.h*1e3",
                    "",
                    "# mass flow rate of the refrigerant",
                    "mdot_r134a_kgPerMin = 6",
                    "mdot_r134a_kgPerS = mdot_r134a_kgPerMin/60"
                ]
            },
            {
                "step_name": "Calculations",
                "code": [
                    "## 6 Calculations (Code Cell)",
                    "mdot_water_kgPerS = mdot_r134a_kgPerS*(h3_JperKg-h4_JperKg)/(h2_JperKg-h1_JperKg)",
                    "print('(a): water mass flow rate: {0:1.4f} kg/s'.format(mdot_water_kgPerS))",
                    "",
                    "Qout_r134a_JperS = mdot_r134a_kgPerS*(h3_JperKg - h4_JperKg)",
                    "print('(b): Q_out_r134a: {0:1.4f} J/s'.format(Qout_r134a_JperS))"
                ]
            }
        ],
        "pedagogical_summary": "Heat is transferred out of the refrigerant and into the water. "
    },
    {
        "problem_title": "compressorAdiabaticNitrogen",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Entropy",
        "module": "module-two",
        "workflow_tags": [
            "reviewed",
            "GSI_checked"
        ],
        "notes": ".",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "",
                "subtopics": [
                    {
                        "key": "Fa25-L7c-5.0",
                        "title": "Air property tables: Compressor example"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 7,
                "title": "Entropy",
                "sections": [
                    "Isentropic Processes"
                ]
            }
        },
        "problem_statement_raw": "Nitrogen enters an adiabatic compressor at $p_1 =$ 110 kPa and $T_1 =$ 30 $^\\circ$ C and exits at $p_2 =$ 682 kPa. The process is reversible. \nGoal: Determine the work input per unit mass, $\\frac{\\dot{W}_\\text{in}}{\\dot{m}}$.",
        "schematic": "Draw a schematic that shows a compressor. Draw the control volume around the compressor. There is a single inlet and oulet for mass to flow in and out. Indicate that it is adiabatic and that work is being transferred in.",
        "physical_laws_and_assumptions": "Control Volume (mass crosses the boundary).\nNitrogen can be treated as an ideal gas. So we can use $T dS$ relations assuming constant specific heats. We can also use pyCalor to determine properties. We will do both and compare our answers.\nNeglect kinetic and potential energy ($\\Delta KE \\approx 0$, $\\Delta PE \\approx 0$).\nReversible process.\nAdiabatic process.\nSteady-flow process ($\\Delta m_\\text{CV}= 0$, $\\Delta E_\\text{CV}= 0$, $\\Delta S_\\text{CV}= 0$).\nWe have a single inlet and outlet ($\\dot{m}_\\text{in}$ and $\\dot{m}_\\text{out}$). \n1.  First Law of Thermodynamics (Energy Balance for Control Volume):\n    $$\\frac{dE_\\text{CV}}{dt} = \\dot{E}_\\text{in} - \\dot{E}_\\text{out}$$\n\n2.  Conservation of Mass (Mass Balance for a Control Volume):\n    $$\\frac{dm_\\text{CV}}{dt} = \\dot{m}_\\text{in} - \\dot{m}_\\text{out}$$\n\nSince this is a steady flow process, we can write:\n$$\\dot{E}_\\text{in} = \\dot{E}_\\text{out}$$\n\n$$\\dot{m}_\\text{in} = \\dot{m}_\\text{out} = \\dot{m}$$\n\nWe can write our conservation of energy equation as:\n$$\\dot{W}_\\text{in} + \\dot{Q}_\\text{in} + \\dot{m} \\left(h_1 + \\frac{w_1^2}{2} + g z_1 \\right) = \\dot{W}_\\text{out} + \\dot{Q}_\\text{out} + \\dot{m} \\left(h_2 + \\frac{w_1^2}{2} + g z_2 \\right)$$\n\nNeglecting kinetic and potential energy effects we can write:\n$$\\dot{W}_\\text{in} + \\dot{Q}_\\text{in} + \\dot{m} \\left(h_1 \\right) = \\dot{W}_\\text{out} + \\dot{Q}_\\text{out} + \\dot{m} \\left(h_2 \\right)$$\n\nApplying the adiabatic assumption:\n$$\\dot{W}_\\text{in} + \\dot{m} \\left(h_1 \\right) = \\dot{W}_\\text{out} + \\dot{m} \\left(h_2 \\right)$$\n\nRearranging:\n$$ \\frac{\\dot{W}_\\text{out} - \\dot{W}_\\text{in}}{\\dot{m}} = h_1 - h_2$$\n\nWe expect that work is only transferred out, so $\\dot{W}_\\text{out} = 0$. We can then write:\n\n$$\\frac{\\dot{W}_\\text{in}}{\\dot{m}} = h_2 - h_1$$\n\nWe know $h_1$ because we have the properties at state 1. We need additional information in order to determine state 2. Since the compressor is reversible and adiabatic (no heat transfer in), then the process is isentropic. Therefore:\n\n$$s_2 = s_1$$\n\nWe can use this information to determine the enthalpy at state 2. \n\nAlternative solution\n\nWe can determine the temperature at state 2 by using the $TdS$ relations. For an ideal gas undergoing an isentropic (reversible and adiabatic) process, we can write:\n\n$$\\left( \\frac{T_2}{T_1} \\right)_{s = const} = \\left(\\frac{p_2}{p_1} \\right)^{(k-1)/k} $$\n\nRecall that $k = c_p/c_v$, so to do this calculation we have to select the $k$ at some temperature. We can choose the temperature at the inlet state. By knowing $T_1$, $p_1$, and $p_2$, we can determine $T_2$. \n\nFor an ideal gas, changes in enthalpy can be expressed as:\n\n$$h_2 - h_1 = c_p \\left(T_2 - T_1 \\right) $$\n\nAgain, we have to select a specific heat at some temperature. We can take the inlet temperature.",
        "pedagogical_summary": "By separating flow work from total work to form the property enthalpy, the work term we calculate is then useful shaft work. The work out per unit mass is a simple formula: \n\n$$\\frac{\\dot{W}_\\text{in}}{\\dot{m}} = h_2 - h_1$$\n\nKey Insight: For a steady flow system undergoing an adiabatic and reversible process, this can be considered as an isentropic process. That is useful because it allows us to determine the exit state of the turbine since we also know the exit pressure. \n\nAlternative Solution If we assume ideal gas behavior, and if the process is isentropic (reversible and adiabatic) then we can write:\n\n$$\\frac{\\dot{W}_\\text{in}}{\\dot{m}} = c_p \\left( T_2 - T_1 \\right)$$\n\nFor that we have to select specific heats at a certain temperature. We chose the inlet temperature. That turned out to be a good assumption. This approach is simpler and is a good way to first solve the problem. One can check if it is a good assumption by determining actual property values using `pyCalor`.",
        "solution_code": [
            {
                "step_name": "Determine State Properties",
                "code": "## 5. Properties (Code Cell)\n!pip install pyCalor\nfrom pyCalor import thermo as th\n\n# Constants and Initial State\np1_kPa = 110 # kPa\nT1_C = 30 # C\nT1_K = T1_C + 273.15\n\np2_kPa = 682 # MPa\n\nsubstance = 'nitrogen'\n\n# Determine state 1\nst1 = th.state(substance,T=(T1_C,'C'),p=(p1_kPa,'kPa'),name='1')\ns1_kJperKgPerK = st1.s\nh1_kJperKg = st1.h\ncp_kJperKgPerK = st1.cp\ncv_kJperKgPerK = st1.cv\nk = cp_kJperKgPerK/cv_kJperKgPerK\n\n# Determine state 2\ns2_kJperKgPerK = s1_kJperKgPerK\nst2 = th.state(substance,s=(s2_kJperKgPerK,'kJ/kg K'),p=(p2_kPa,'kPa'),name='2')\nh2_kJperKg = st2.h\n\n## Alternative solution\nT2_K_alt = T1_K*(p2_kPa/p1_kPa)**((k-1)/k)"
            },
            {
                "step_name": "Calculate Work Input and Compare Methods",
                "code": "# 6 Calculations (Code Cell)\nwIn_kJperKg = h2_kJperKg - h1_kJperKg\n\nprint(f\"Work input per unit mass: {wIn_kJperKg:.2f} kJ/kg\")\n\nwIn_kJperKg_alt = cp_kJperKgPerK*(T2_K_alt - T1_K)\n\nprint(f\"Work input per unit mass assuming ideal gas and using TdS relations: {wIn_kJperKg_alt:.2f} kJ/kg\")"
            }
        ]
    },
    {
        "problem_title": "adiabaticExpansion",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "hard"
        ],
        "topic": "Properties",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_fclugwz7",
                "subtopics": [
                    {
                        "key": "Fa25-L4a-5.0",
                        "title": "Moving boundary work: Adiabatic process"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 4,
                "title": "Energy Analysis of Closed Systems",
                "sections": [
                    "Moving Boundary Work",
                    "Energy Balance for Closed Systems",
                    "Specific Heats",
                    "Internal Energy, Enthalpy, and Specific Heats of Ideal Gases"
                ]
            },
            "notes": ""
        },
        "problem_statement_raw": "Goal: Show that for an ideal gas in a closed system undergoing adiabatic expansion, that $ p V^\\kappa = \\text{const} $.",
        "schematic": "Show a piston expanding some distance. The control volume should be drawn inside of the piston cylinder. No heat should be transferred in or out. Work should be shown to be transferred out.",
        "physical_laws_and_assumptions": "Assumptions and Approximations:\nIdeal gas law applies\nNo heat transfer.\nNeglect changes in kinetic and potential energy.\nWork is transferred only through boundary work ($p dV$).\nConstant values for specific heat\n\nPhysical Laws and Governing Equations:\nConservation of energy\nDefinition of specific heat and its relation to changes in internal energy\n\n$$\\Delta E_\\text{CV} = E_\\text{in} - E_\\text{out} $$\n\n$$\\Delta U + \\Delta KE + \\Delta PE = (W_\\text{in} + Q_\\text{in}) - (W_\\text{out} + Q_\\text{out}) $$\n\n$$\\Delta U = - W_\\text{out}$$\n\n$$\\Delta U = - W_\\text{out}$$\n\nWe can write this in differential form:\n\n$$dU = - \\delta W_\\text{out} $$\n\n$$dU = - p dV \\tag{1}$$\n\nRecall the definition of $c_V$:\n\n$$c_V = \\left( \\frac{\\partial u}{\\partial T} \\right)_V$$\n\nThat is, if we transfer heat to a control volume, and if the volume is kept constant, then changes in internal energy can be related to changes in temperature through a constant. \n\n$$\\implies du = c_V dT \\tag{2}$$\n\nCombining equations (1) and (2), and including the mass of the gas in the piston, $m$, we have:\n\n$$m du = m c_V dT = - p dV \\tag{3}$$\n\nWe would like to replace temperature with $p$ and $V$. For this we can use the ideal gas law:\n\n$$p V = m R T \\tag{4}$$\n\nTaking the differential:\n\n$$d \\left(p V\\right) = m R dT$$\n\n$$V dp + p dV = m R dT$$\n\nRearranging:\n\n$$dT = \\frac{V dp + p dV}{m R} \\tag{5}$$\n\nCombining equations (5) and (3), we have:\n\n$$m c_V \\left( \\frac{V dp + p dV}{m R} \\right) = - p dV$$\n\nSimplifying:\n\n$$c_V \\left( V dp + p dV \\right) = - R p dV$$\n\n$$ c_V V dp + c_V p dV + R p dV = 0 $$\n\n$$ (c_V + R) p dV + c_V V dp = 0 $$\n\n$$ \\frac{(c_V + R)}{c_V}\\frac{dV}{V} + \\frac{dp}{p} = 0 $$\n\n$$ \\frac{(c_V + R)}{c_V}\\int \\frac{dV}{V} + \\int \\frac{dp}{p} = 0 $$\n\n$$ \\frac{(c_V + R)}{c_V} \\ln V + \\ln p = \\text{const} $$\n\nAssuming constant specific heats, we can define a constant:\n\n$$ \\kappa \\equiv \\frac{(c_V + R)}{c_V} \\tag{7}$$\n\n$$ \\kappa \\ln V + \\ln p = \\text{const} $$\n\n$$ \\ln V^\\kappa + \\ln p = \\text{const} $$\n\n$$ \\ln pV^\\kappa = \\text{const} $$\n\n$$ pV^\\kappa = \\text{const} \\tag{8}$$",
        "pedagogical_summary": "We were able to prove that $p V^\\kappa = \\text{constant}$ for an adiabatic expansion process. We also see from this that we are able to relate pressure to volume for a process from A to B. That means we will be able to determine the boundary work done for such a process. This will be useful when we start to analyze cycles, such as the Carnot cycle, which has adiabatic expansion and compression processes.",
        "solution_code": [
            {
                "step_name": "Define Initial and Process Variables",
                "code": "## 5. Properties (Code Cell)\n# we can determine the specific heat of air at room temperature and pressure conditions\n!pip install pyCalor\nfrom pyCalor import thermo as th\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nT_C = 20\np_Pa = 101325\nsubstance = 'air'\n\nst = th.state(substance,T=(T_C,'C'),p=(p_Pa,'Pa'))\ncp_kJperKgPerK = st.cp\ncv_kJperKgPerK = st.cv\nR_kJperKgPerK = st.R\n\nk = cp_kJperKgPerK/cv_kJperKgPerK"
            },
            {
                "step_name": "Calculate Final State and Work",
                "code": "## 6. Calculations (Code Cell)\n# Calculate other properties using the definitions from the derivations above\n\n# Ideal Gas Law\n# p V = m R T => m = p V / (R T)\n# We need an initial volume, V_A. Let's assume some values for the initial state A\nV_A = 0.01 # m^3\nm_kg = (p_Pa * V_A) / (R_kJperKgPerK * 1000 * (T_C + 273.15)) # Convert R to J/kg-K and T to K\n\n# Now, calculate a final volume V_B (expansion)\nV_B = 0.05 # m^3\n\n# State B Calculation\n# Adiabatic process: p V^k = constant\nP_final_adiabatic = p_Pa * (V_A/V_B)**k # (Pa)\nT_final_adiabatic = P_final_adiabatic * V_B / (m_kg * R_kJperKgPerK * 1000) - 273.15 # Convert R and back to C\n\n# Boundary Work (Adiabatic)\n# W_b = (p_B V_B - p_A V_A) / (1-k)\nW_b_J = (P_final_adiabatic * V_B - p_Pa * V_A) / (1-k)\n\n# Print results\nprint(f\"Initial State (A): p={p_Pa/1000:.2f} kPa, T={T_C:.2f} C, V={V_A:.4f} m^3, k={k:.4f}\")\nprint(f\"Mass of gas: m={m_kg*1000:.2f} g\")\nprint(f\"Final State (B - Adiabatic): p={P_final_adiabatic/1000:.2f} kPa, T={T_final_adiabatic:.2f} C, V={V_B:.4f} m^3\")\nprint(f\"Boundary Work Done: W_b={W_b_J:.2f} J\")\n\n# Plotting the P-V diagram\nV_range = np.linspace(V_A, V_B, 100)\nP_adiabatic = p_Pa * (V_A/V_range)**k\n\nplt.figure(figsize=(8, 6))\nplt.plot(V_range, P_adiabatic/1000, label='Adiabatic Process ($pV^\\kappa$=const)', color='blue')\nplt.plot(V_A, p_Pa/1000, 'o', color='red', markersize=8)\nplt.annotate('A', xy=(V_A, p_Pa/1000), xytext=(-10, 5), textcoords='offset points', ha='center', fontsize=12)\nplt.plot(V_B, P_final_adiabatic/1000, 'o', color='black', markersize=8)\nplt.annotate('B', xy=(V_B, P_final_adiabatic/1000), xytext=(5, 5), textcoords='offset points', ha='center', fontsize=12)\n# Add labels and title\nplt.xlabel('$V$ (m^3)', fontsize=14)\nplt.ylabel('$p$ (kPa)', fontsize=14) # Changed Pa to kPa for plot clarity\nplt.title('P-V Diagram for Adiabatic Expansion')\nplt.grid(True)\nplt.legend()\nplt.show()"
            }
        ]
    },
    {
        "problem_title": "vanDerWaalsPlot",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "hard"
        ],
        "topic": "Properties",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_blyiho9t",
                "subtopics": [
                    {
                        "key": "Fa25-L3b-6.0",
                        "title": "van der Waals equation of state"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 3,
                "title": "Properties of Pure Substances",
                "sections": [
                    "Other Equations of State"
                ]
            }
        },
        "notes": "",
        "problem_statement_raw": "Goal: Plot the isotherms at the critical point of water using pyCalor, the van der Waals equation of state, and the ideal gas equation.",
        "schematic_raw": "No schematic",
        "physical_laws_and_assumptions": "Assumptions and Approximations: Pure substance. Dependent properties only depend upon two independent properties. Physical Laws and Governing Equations: The ideal gas equation for water can be written as: $$ p = R T / v$$ where $R$ is the mass specific gas constant. The van der Waals equation is defined as: $$\\left(p + \\frac{a}{v^2} \\right) \\left(v - b \\right) = RT $$ where $p$ is pressure, $v$ is specific volume, $R$ is the specific gas constant, $T$ is temperature, and $a$ and $b$ are constants. We can write this as: $$ p  = (R T_\\text{cr} - (a/v^2) v + a b/v^2)/(v - b)$$",
        "solution_code": [
            {
                "step_name": "5. Properties",
                "code": "!pip install pyCalor\nfrom pyCalor import thermo as th\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# critical point of water\nTc_K = 647.096 # K\npc_Pa = 22.060e6 # Pa\n\n# triple point of water\nTtp_K = 273.16 # K\nptp_Pa = 611.6 # Pa\n\n# critical state of water\nstcritical = th.state('Water', p=pc_Pa/1e3, T=Tc_K, name=\"1\")\n\n# R, a, and b for the van der Waals equation of state\nR = stcritical.R_mass\nvc = stcritical.v # m^3/kg\nac = 27 * R**2 * Tc_K**2 / (64 * pc_Pa)\nbc = R * Tc_K / (8 * pc_Pa)\n\nprint(f\"R = {R:.5f} kJ/(kg K)\")\nprint(f\"v_c = {vc:.5e} m^3/kg\")\nprint(f\"a = {ac:.5f}\")\nprint(f\"b = {bc:.5e}\")"
            },
            {
                "step_name": "6. Calculations",
                "code": "def vdWeos(v, T, R, a, b):\n    \"\"\"van der Waals equation of state\"\"\"\n    # p = R*T / (v-b) - a/v^2\n    p = R * T / (v - b) - a / v**2\n    return p / 1e6 # convert to MPa\n\ndef idealeos(v, T, R):\n    \"\"\"Ideal Gas equation of state\"\"\"\n    p = R * T / v\n    return p / 1e6 # convert to MPa\n\n# Define the range of specific volume (v)\nv_min = vc * 0.95\nv_max = vc * 10\nv_range = np.linspace(v_min, v_max, 500)\n\n# Calculate pressures\np_vdw = vdWeos(v_range, Tc_K, R, ac, bc)\np_ideal = idealeos(v_range, Tc_K, R)\n\n# pyCalor data (CoolProp)\np_pycalor = [th.state('Water', v=v, T=Tc_K).p/1e6 for v in v_range]\n\n# Plotting\nfig, ax = plt.subplots(figsize=(6, 4), dpi=150)\nax.plot(v_range, p_pycalor, 'k-', label='pyCalor (CoolProp)')\nax.plot(v_range, p_vdw, 'r--', label='van der Waals')\nax.plot(v_range, p_ideal, 'b:', label='Ideal Gas')\n\n# Add critical point\nax.plot(vc, pc_Pa/1e6, 'ko', label='Critical Point')\n\n# Labeling and Formatting\nax.legend()\nax.set_title(f'Water Critical Isotherm ($T_\\text{{cr}} = {Tc_K:.2f}$ K)')\nxmin = 0.8e-3\nxmax = 1\nax.set_xlim([xmin, xmax])\nymin = 0\nymax = 25\nax.set_ylim([ymin, ymax])\nax.set_xlabel('$v$ (m$^3$/kg)')\nax.set_ylabel('$p$ (MPa)')\n\n# plt.savefig('pycalor-vdW-p-v-diagram.pdf')"
            }
        ],
        "pedagogical_summary": "We were able to plot critical temperature isotherms for water using pyCalor, the van der Waals equation of state, and the ideal gas equation. What we see is that for high values of specific volume, all three isotherms overlap, indicating that they are all valid. However, for lower specific volumes, below 0.1 m$^3$/kg the ideal gas equation significantly deviates from the other two isotherms, indicating that it is no longer valid."
    },
    {
        "problem_title": "Introduction to the First Law of Thermodynamics",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "medium"
        ],
        "topic": "Introduction",
        "lecture_reference": {
            "lecture_id": "1_mtmivyvl",
            "subtopics": [
                {
                    "key": "Fa25-L1a-7.0",
                    "title": "Introduction to the first law of thermodynamics"
                }
            ]
        },
        "book_reference": {
            "chapter_number": 2,
            "title": "Energy, Energy Transfer, and General Energy Analysis",
            "sections": [
                "The First Law of Thermodynamics"
            ]
        },
        "notes": "",
        "problem_statement_raw": "Work We can define work as: $$dW_F = F ds $$ where $s$ is position, $F$ is force. A state of a system is its condition or position and is identified through the properties of a system. A property of a system is any observable characteristic of the system. Two states of a system are called identifical states if every property of the system is the same in both instances. When the state of a system alters, the change of state is described in terms of the end states. The path of a change of state is the series of states through which the system passes. The process involved in a change of state is described in terms of the path and the method by which the path is described. Introduction to the First Law Consider a system consisting of a fixed surface $S$ and a weight $\\omega$ tied to a drum mounted above the surface in frictionless bearings. Let's call the state of this system in which the weight rests upon the surface state 1. A process occurs in which some outside agent turns the crank on the drum and causes the weight to move slowly upward until it is elevated a distance $h$ above the surface. This new state of the system is state 2. The process just described was accompanied by the flow of work from a system comprising the agent to the system comprising the weight and drum. Work flows from a system (and to another) during a given operation if the sole effect external to the system could be the rise of a weight. Now the weight-drum system is allowed to return to state 1 by a slow downward movement of the weight. In order to insure slow motion it is necessary to apply a restraining force to the drum. It is clear that the restraining force might be the force applied by an opposing weight, of the same magnitude as weight $\\omega$ but outside the system, which will rise the distance $h$ as the system returns to state 1. Following the convention that work done by the system is positive and work done on the system is negative, we may write for the cycle of operations 1-2-1: $$ \\oint dW = 0$$ where the circle on the sign of integration indicates that the summation is made around a close cycle. It appears that something which supplied to the system as work in process 1-2 was not destroyed. We cannot say that work was stored in the system at state 2, but we recall that in the science of mechanics that stored something is referred to as potential energy due to gravity. Now let us repeat process 1-2 exactly, but, instead of opposing process 2-1 with an external weight, let us restrain the downward motion by means of a brake on the drum. When the weight is once more resting on the surface we inspect the system to see if state 1 has been restored. We find that it has been restored in every respect except one; namely, the temperatures of the drum and brake shoe are higher than in state 1. Our experience with heat indicates that even in this respect we may return to state 1 by cooling the brake and rum. Now for this second cycle of operation we may write: $$ \\oint dW \\ne 0$$ and our concept of a something which is conserved to appear as work or to be stored as potential energy fails.",
        "physical_laws_and_assumptions": "Experiments have shown that the work done in raising the weight is proportional to the heat delivered by the system to the calorimeter. Therefore we may write: $$ \\oint dQ - \\oint dW = 0 \\tag{1a}$$ The First Law of Thermodynamics The first law of thermodynamics is simply a generalization of equation (1) to include all cyclic proceesses in nature. If any system is carried through a cycle (the end state being precisely the same as the initial state) then the sumation of the work delivered to the surroundings is proportional to the summation of the heat taken from the surroundings. The summations are in both instances algebraic and include positive and negative heat and work. These experiments cited above are no proof of the First Law. If it is true it is probable that its truth will never be demonstrated except by failure of all attempts to disprove it. Corollaries of the First Law Definition of Internal Energy, a Property  Consider a system which can change by some process A from state 1 to state 0 and by some process B from state 0 to state 1. Then: $$\\int^0_{1A} (dQ - dW) + \\int_{0B}^1(dQ - dW) = 0 $$ Let process $C$ be any other process by which the system may change in state from 0 to 1. Then for the cycle $1A0C1$ we may write: $$\\int^0_{1A} (dQ - dW) + \\int_{0C}^1(dQ - dW) = 0 $$ Combining these two equations and simplifying: $$ \\int^1_{0B} (dQ - dW) = \\int_{0C}^1 (dQ - dW)$$ Therefore, when a system changes from one prescribed state to another, the value of the integral of $(dQ - dW)$ is fixed by the end states and is independent of the process. It follows that this integral is a property because it satisfies the criterion of a property. We shall call it the internal energy of the system and give it the symbol $E$. Therefore: $$ E_1 - E_0 = \\int_0^1 (dQ - dW) = Q - W \\tag{2a}$$ where $Q$ and $W$ denote respectively the net heat received by the system and the net work done by the system during the change of state from 0 to 1. Differentiation gives: $$dE = dQ - dW $$ Thermodynamics tells us nothing about the values of $E_1$ or $E_0$ in the previous equation though it does tell us the means of computing the difference between them. Since there is no absolute value of the internal energy, it is permissible to assume that its value to be zero at any specified state. It is profitable to reflect on the difference between the property $E$ and the non-properties $Q$ and $W$. A cyclic integral of $dQ$ or $dW$ may be other than zero, which is proof that the integrals of these quantities are not properties. On the other hand, the cyclic integral of $dE$ cannot be other than zero. The differential $dE$ is an exact differential in terms of the variables that determine the state. The value of its integral is fixed when the values of the independent variables are fixed. Nos imilar statement can be made for $dQ$ and $dW$, because the values of their integrals depend on the processes by which the state is approached and not upon the magnitudes of the properties corresponding to the state. So we can write $E_1$ to denote the internal energy corresponding to a state 1 but not $W_1$ or $Q_1$, because there is no quantity of work or heat which corresponds to state 1. The law of conservation of energy The internal energy of a system remains unchanged if the system is isolated from its environment as regards work and heat, regardless of the nature of the changes within the system. Internal energy remains unchanged for any cyclic change in the state of the system. This is equivalent to the First Law. The definition of energy The term energy may be employed as a general term which embraces heat, work, and internal energy. In Mechanics changes in internal energy of a system is called kinetic energy. A system comprising a weight in a gravitational field, work may be introduced to raise the weight. The corresponding icnrease in the internal energy of the system is called in mechanics the increase in potential energy due to gravity. Internal energy may include potential energy in an electrostatic field or in a magnetic field. These are all forms of stored energy which may be increased or decreased through the transfer of work alone. Internal energy includes besides these all kinds of stored energy which are affected by transfer of heat. The First Law and the Boundaries of a System The first law states that work and heat are equal in a cyclic process. Work and heat are evaluated at the boundaries of a system. No application of the first law can be made until the system and its boundaries are defined. The boundaries need not be stationary, and in general they will not be. The first step in the solution of a problem in thermodynamics is the description of a system and its boundaries.",
        "solution_code": [
            {
                "step_name": "Code Cell 1",
                "code": ""
            }
        ],
        "pedagogical_summary": ""
    },
    {
        "problem_title": "entropyDifferentialRelations",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "medium"
        ],
        "topic": "Entropy",
        "module": "module-two",
        "lecture_reference": {
            "lecture_id": "",
            "subtopics": [
                {
                    "key": "",
                    "topic": ""
                },
                {
                    "key": "",
                    "topic": ""
                }
            ]
        },
        "book_reference": {
            "chapter_number": 7,
            "title": "Entropy",
            "sections": [
                "The Tds Relations",
                "Isentropic Relations for Ideal Gases"
            ]
        },
        "notes": "",
        "problem_statement_raw": "Consider an adiabatic and reversible process (isentropic) for an ideal gas. Goal: Determine the isentropic relations for an ideal gas from the $Tds$ relations and the ideal gas equation of state. N/A",
        "physical_laws_and_assumptions": "Ideal Gas $\\Delta s \\approx c_v \\ln \\frac{T_2}{T_1} + R \\ln \\frac{v_2}{v_1} $ $\\Delta s \\approx c_p \\ln \\frac{T_2}{T_1} - R \\ln \\frac{p_2}{p_1} $ The two $Tds$ equations are: $$ T ds = du + p dv $$ $$ T ds = dh - v dp $$ Where $T$ is temperature, $s$ is specific entropy, $u$ is specific internal energy, $h$ is specific enthalpy, $p$ is pressure, and $v$ is specific volume. We can substitute the ideal gas relations $du = c_v dT$ and $dh = c_p dT$ into the $Tds$ equations: $$ T ds = c_v dT + p dv \\tag{1}$$ $$ T ds = c_p dT - v dp \\tag{2}$$ For an isentropic process, $ds = 0$. For an isentropic ideal gas process, equations (1) and (2) simplify to: $$ c_v dT = - p dv \\tag{3}$$ $$ c_p dT = v dp \\tag{4}$$ Isentropic Relation for $T$ and $v$ We can re-arrange equation (3) and substitute $p = R T / v$ from the ideal gas equation of state: $$ c_v \\frac{dT}{T} = - \\frac{R}{v} dv $$ We can integrate the above equation from state 1 to state 2, assuming constant specific heats: $$ c_v \\ln \\frac{T_2}{T_1} = - R \\ln \\frac{v_2}{v_1} $$ Since $R = c_p - c_v$: $$ c_v \\ln \\frac{T_2}{T_1} = - (c_p - c_v) \\ln \\frac{v_2}{v_1} $$ Dividing by $c_v$ and recalling the specific heat ratio $k = c_p / c_v$: $$ \\ln \\frac{T_2}{T_1} = - (k - 1) \\ln \\frac{v_2}{v_1} $$ $$ \\ln \\frac{T_2}{T_1} = \\ln \\left(\\frac{v_2}{v_1}\\right)^{-(k - 1)} $$ $$ \\frac{T_2}{T_1} = \\left(\\frac{v_1}{v_2}\\right)^{k - 1} \\tag{ideal gas, s = const} $$ Isentropic Relation for $T$ and $p$ We can re-arrange equation (4) and substitute $v = R T / p$ from the ideal gas equation of state: $$ c_p \\frac{dT}{T} = \\frac{R}{p} dp $$ We can integrate the above equation from state 1 to state 2, assuming constant specific heats: $$ c_p \\ln \\frac{T_2}{T_1} = R \\ln \\frac{p_2}{p_1} $$ Dividing by $c_p$ and recalling the specific heat ratio $k = c_p / c_v$ and $R = c_p - c_v$: $$ \\ln \\frac{T_2}{T_1} = \\frac{R}{c_p} \\ln \\frac{p_2}{p_1} $$ $$ \\ln \\frac{T_2}{T_1} = \\frac{c_p - c_v}{c_p} \\ln \\frac{p_2}{p_1} = \\left(1 - \\frac{c_v}{c_p}\\right) \\ln \\frac{p_2}{p_1} $$ $$ \\ln \\frac{T_2}{T_1} = \\left(1 - \\frac{1}{k}\\right) \\ln \\frac{p_2}{p_1} = \\left(\\frac{k - 1}{k}\\right) \\ln \\frac{p_2}{p_1} $$ $$ \\frac{T_2}{T_1} = \\left(\\frac{p_2}{p_1}\\right)^{(k-1)/k} \\tag{ideal gas, s = const} $$ Isentropic Relation for $p$ and $v$ We can set the two equations for the temperature ratio equal to each other: $$ \\frac{T_2}{T_1} = \\left(\\frac{p_2}{p_1}\\right)^{[k/k - (1/k)]} = \\left(\\frac{p_2}{p_1}\\right)^{(k-1)/k} \\tag{ideal gas, s = const}$$ $$ \\frac{T_2}{T_1} = \\left(\\frac{v_1}{v_2}\\right)^{k - 1} \\tag{ideal gas, s = const}$$ We can set these two equations equal to each other to get our third isentropic relation: $$\\left(\\frac{p_2}{p_1}\\right)^{(k-1)/k} = \\left(\\frac{v_1}{v_2}\\right)^{k - 1} $$ Which we can re-write as: $$\\left(\\frac{p_2}{p_1}\\right) = \\left(\\frac{v_1}{v_2}\\right)^{k} \\tag{ideal gas, s = const} $$ We can write these three ideal gas isentropic relations more generally as: $$T v^{k - 1} = \\text{const} $$ $$T p^{(1 - k)/k} = \\text{const} $$ $$p v ^k = \\text{const} $$ where $k = k(T)$.",
        "solution_code": [],
        "pedagogical_summary": ""
    },
    {
        "problem_title": "compressorMultistageCoolingPyCalor",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "medium"
        ],
        "topic": "Entropy",
        "notes": ".",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "",
                "subtopics": [
                    {
                        "key": "Fa25-L7c-3.0",
                        "title": "Multisage Compressor With Cooling"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 7,
                "title": "Entropy",
                "sections": [
                    "Reversible Steady-Flow Work",
                    "Minimizing Compressor Work"
                ]
            }
        },
        "problem_statement_raw": "Air is compressed in a two-stage compressor from 100 kPa and 295 K to 900 kPa. An intercooler is used to cool the air back to 295 K at a pressure of 300 kPa. All processes are isentropic, and a mass flow rate of 0.2 kg/s is maintained. \n\nGoal:\n(a) Determine the total work input for the compressor. \n(b) Determine the work input if the air was compressed in a single stage isentropic compressor.",
        "schematic": "Draw the schematic that shows a two-stage compressor with an intercooler (heat exchanger) in between.",
        "physical_laws_and_assumptions": "Control Volume (mass crosses the boundary).\nAir is an Ideal Gas (constant specific heats, $c_p$, $c_v$, $R$).\nNeglect kinetic and potential energy ($\\Delta KE \\approx 0$, $\\Delta PE \\approx 0$).\nIsentropic Process for both compressor stages ($\\Delta s = 0$).\nSteady-flow process ($\\Delta m_{\\text{CV}}= 0$, $\\Delta E_{\\text{CV}}= 0$).\nIntercooler is isobaric on the air side ($p_2 = p_3$).\nIntercooler cools back to initial temperature ($T_3 = T_1$).\nSingle inlet and outlet for each component.\n\nThe total work is the sum of the work for each compressor stage:\n$$ \\frac{\\dot{W}_{\\text{in,total}}}{\\dot{m}} = \\frac{\\dot{W}_{\\text{in,stage 1}}}{\\dot{m}} + \\frac{\\dot{W}_{\\text{in,stage 2}}}{\\dot{m}} $$\n\nFor each stage, the energy balance for a steady-flow adiabatic device gives the shaft work per unit mass:\n$$ \\frac{\\dot{W}_{\\text{in}}}{\\dot{m}} = h_{\\text{out}} - h_{\\text{in}} $$\n\nSo, the total work is:\n$$ \\frac{\\dot{W}_{\\text{in,total}}}{\\dot{m}} = (h_2 - h_1) + (h_4 - h_3) $$\n\nFor the isentropic process of an ideal gas, we can use the T-P relation:\n$$ \\left( \\frac{T_2}{T_1} \\right)_{s = const} = \\left(\\frac{p_2}{p_1} \\right)^{(k-1)/k} $$\n\nAnd the enthalpy change:\n$$ h_{\\text{out}} - h_{\\text{in}} = c_p (T_{\\text{out}} - T_{\\text{in}}) $$\n\nFor Minimum Work Input:\nFor a two-stage compressor with intercooling, the minimum work input occurs when the intermediate pressure $p_i$ is the geometric mean of the inlet and final pressures:\n$$ p_i = \\sqrt{p_1 p_f} $$\n\nIn this problem, the intermediate pressure is given as $p_2 = 300 \\text{ kPa}$. We can check if this is the optimal pressure.\n$$ p_{\\text{optimal}} = \\sqrt{(100 \\text{ kPa}) \\times (900 \\text{ kPa})} = \\sqrt{90000} \\text{ kPa} = 300 \\text{ kPa} $$\nThe given pressure is the optimal one.",
        "pedagogical_summary": "Multistage vs. Single Stage: For a multi-stage compressor with intercooling, the total work input is the sum of the work input for each stage. The advantage of the intercooler is that it lowers the specific volume of the gas, $\\nu_3 < \\nu_2$, thus decreasing the work input for the second stage. This is why the total work for the two-stage compressor ($W_{\\text{in}} = 59.1 \\text{ kW}$) is less than the work for the single-stage compressor ($W_{\\text{in,single}} = 78.5 \\text{ kW}$). \nOptimal Intercooling Pressure: The work input is minimized when the compression ratio is the same for each stage. Since the inlet and final temperatures are the same, the minimum work input occurs when $p_2 / p_1 = p_4 / p_3$, which leads to $p_{\\text{intermediate}} = \\sqrt{p_1 p_{\\text{final}}}$. In this case, $p_{\\text{intermediate}} = \\sqrt{100 \\times 900} = 300 \\text{ kPa}$, which is the pressure given in the problem.\nThermodynamic Basis: The work input for a steady-flow, reversible (isentropic) compression is given by the change in enthalpy: $\\frac{\\dot{W}_{\\text{in}}}{\\dot{m}} = \\Delta h$. Using the pyCalor library (which uses the fundamental property relations for real fluids) is the most accurate approach, as opposed to assuming constant specific heats for the entire process.",
        "solution_code": [
            {
                "step_name": "Determine Stage Properties",
                "code": "## 5. Properties (Code Cell)\n!pip install pyCalor\nfrom pyCalor import thermo as th\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Given\np1_Pa = 100000 # Pa (100 kPa)\nT1_K = 295 # K\np4_Pa = 900000 # Pa (900 kPa)\np2_Pa = 300000 # Pa (300 kPa) - Intercooler pressure\nT3_K = 295 # K - Cooled back to initial temperature\nmdot_kgPerS = 0.2 # kg/s\nsubstance = 'air'\n\n# State 1: T1, p1\nst1 = th.state(substance,T=(T1_K,'K'),p=(p1_Pa,'Pa'),name='1')\nh1_JperKg = st1.h*1e3 # Convert kJ/kg to J/kg\ns1_JperKgperK = st1.s*1e3 # Convert kJ/kg K to J/kg K\n\n# State 2: p2, s2=s1\ns2_JperKgperK = s1_JperKgperK\nst2 = th.state(substance,s=(s2_JperKgperK,'J/kg K'),p=(p2_Pa,'Pa'),name='2')\nh2_JperKg = st2.h*1e3\nT2_K = st2.T\n\n# State 3: T3, p3=p2\nT3_K = T1_K\np3_Pa = p2_Pa\nst3 = th.state(substance,T=(T3_K,'K'),p=(p3_Pa,'Pa'),name='3')\nh3_JperKg = st3.h*1e3\ns3_JperKgperK = st3.s*1e3\n\n# State 4: p4, s4=s3\ns4_JperKgperK = s3_JperKgperK\nst4 = th.state(substance,s=(s4_JperKgperK,'J/kg K'),p=(p4_Pa,'Pa'),name='4')\nh4_JperKg = st4.h*1e3\nT4_K = st4.T"
            },
            {
                "step_name": "Calculate Total and Single-Stage Work",
                "code": "# 6 Calculations (Code Cell)\n# Work in\nWdot_W = mdot_kgPerS*((h2_JperKg - h1_JperKg)+(h4_JperKg - h3_JperKg))\nWdot_kW = Wdot_W/1000# ; print(Wdot_kW)\nprint('(a) Wdot_kW = {0:1.1f} kW.'.format(Wdot_kW))\n\n# Now we can see how much work we would have to do if we were to do the same process with a single compressor.\ns2_JperKgperK_ = s1_JperKgperK\nst2_ = th.state(substance,s=(s2_JperKgperK_,'J/kg K'),p=(p4_Pa,'Pa'),name='2_')\n\nh2_JperKg_ = st2_.h*1e3\nT2_K_ = st2_.T\nWdot_W_ = mdot_kgPerS*((h2_JperKg_ - h1_JperKg))\nWdot_kW_ = Wdot_W_/1000# ; print(Wdot_kW)\nprint('(b) Wdot_kW = {0:1.1f} kW.'.format(Wdot_kW_))"
            }
        ]
    },
    {
        "problem_title": "turbineEnthalpyVsInternalEnergy",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Control Volumes",
        "notes": "",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_0r6wkz1o",
                "subtopics": [
                    {
                        "key": "Fa25-L5a-4.0",
                        "title": "Applying conservation of mass and energy principles for a control volume to a turbine."
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 5,
                "title": "Mass and Energy Analysis of Control Volumes",
                "sections": [
                    "Some Steady-Flow Engineering Devices"
                ]
            }
        },
        "problem_statement_raw": "Steam enters a turbine at 4600 kg/hr and a pressure of 60 bar and 400$^\\circ$C and exits at 0.2 bar and a vapor quality of 0.9. Goal: Determine the shaft power and the total power transferred from the system. Draw a control volume. One control volume for the iron block (CV1). Another control volume for the water bath (CV2).",
        "physical_laws_and_assumptions": "Neglect kinetic and potential energy. Steady-flow system. Determine properties using pyCalor. The shaft work is: $$ \\dot{W}_\\text{S,out} = \\dot{m} \\left(h_1 - h_2 \\right)$$. The overall work transferred out is: $$ \\dot{W}_\\text{net,out} = \\dot{m} (u_1 - u_2)$$. What we see from this is that: $$ \\dot{W}_\\text{S,out} \\ne \\dot{W}_\\text{net,out} $$",
        "solution_code": [
            {
                "step_name": "Properties",
                "code": "!pip install pyCalor\nfrom pyCalor import thermo as th\n\n# A steam turbine operates with the conditions listed below. \nmdot_kgPerHr = 4600\n# conversion\nmdot_kgPerS = mdot_kgPerHr/(60*60)\n\n# state 1\np1_bar = 60\nT1_C = 400\nst1 = th.state('water',T=(T1_C,'C'),p=(p1_bar,'bar'),name='1')\n\n# state 2\np2_bar = 0.2\nx2 = 0.9\nst2 = th.state('water',x=x2,p=(p2_bar,'bar'),name='2')"
            },
            {
                "step_name": "Calculations",
                "code": "# process\npr = th.process([(st1,st2)])\n\n# T-v plot\npr.plot('Tv')\n\n# Answer: part (a)\nW_shaft_out_kW = mdot_kgPerS*(1000*(st1.h-st2.h)); print(W_shaft_out_kW)\n\n# Answer: part (b)\nW_total_out_kW = mdot_kgPerS*(st1.u-st2.u); print(W_total_out_kW)"
            }
        ],
        "pedagogical_summary": "The reason that the shaft work $\\dot{W}_\\text{S,out}$ and the overall work transferred out $\\dot{W}_\\text{net,out}$ are different in this problem is due to the steady-flow energy equation for a control volume. $$\\dot{Q}_\\text{net,in} + \\sum_\\text{in} \\dot{m} \\left( h + \\frac{V^2}{2} + gz \\right) = \\dot{W}_\\text{net,out} + \\sum_\\text{out} \\dot{m} \\left( h + \\frac{V^2}{2} + gz \\right)$$. For a single-inlet, single-outlet steady-flow system with negligible $\\Delta KE$ and $\\Delta PE$: $$\\dot{Q}_\\text{net,in} = \\dot{W}_\\text{net,out} + \\dot{m} \\left( h_2 - h_1 \\right)$$. The shaft work for the turbine (a steady-flow device) is defined as: $$\\dot{W}_\\text{S,out} = \\dot{m} \\left(h_1 - h_2 \\right)$$. If we assume the system is adiabatic ($\\dot{Q}_\\text{net,in}=0$) (which is a reasonable approximation for many turbines), then the steady-flow energy equation becomes: $$0 = \\dot{W}_\\text{net,out} + \\dot{m} \\left( h_2 - h_1 \\right)$$. $$\\dot{W}_\\text{net,out} = \\dot{m} \\left( h_1 - h_2 \\right)$$. Thus, $\\dot{W}_\\text{net,out} = \\dot{W}_\\text{S,out}$ under the assumption of adiabatic operation. However, in this problem, we are asked to compare $\\dot{W}_\\text{S,out} = \\dot{m} \\left(h_1 - h_2 \\right)$ and $\\dot{W}_\\text{net,out} = \\dot{m} \\left(u_1 - u_2 \\right)$. The second equation $\\dot{W}_\\text{net,out} = \\dot{m} \\left(u_1 - u_2 \\right)$ is only valid for a closed system or a piston-cylinder device where $\\dot{W}_\\text{net,out}$ is the boundary work. The difference between the shaft work (using enthalpy) and the overall work (using internal energy) highlights a common conceptual error when applying the first law of thermodynamics to a control volume (open system) versus a closed system. The steady-flow energy equation correctly uses the enthalpy for flow work, which is why $\\dot{W}_\\text{S,out}$ is the correct answer for the shaft power of the turbine."
    },
    {
        "problem_title": "redlichKwong",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "hard"
        ],
        "topic": "Properties",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_blyiho9t",
                "subtopics": [
                    {
                        "key": "Fa25-L3b-6.0",
                        "title": "van der Waals equation of state"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 3,
                "title": "Properties of Pure Substances",
                "sections": [
                    "Other Equations of State"
                ]
            },
            "notes": ""
        },
        "problem_statement_raw": "Goal: Plot the isotherms at the critical point of water using `pyCalor` and the Redlich-Kwong equation of state.",
        "physical_laws_and_assumptions": "Pure substance. Dependent properties only depend upon two independent properties. The Redlich-Kwong equation for water can be written as: $$p = \\frac{R T}{v - b} - \\frac{a}{v \\sqrt{T} (v + b)} $$ where $p$ is pressure, $v$ is specific volume, $R$ is the specific gas constant, $T$ is temperature, and $a$ and $b$ are constants.",
        "solution_code": [
            {
                "step_name": "Properties",
                "code": "## 5. Properties (Code Cell)\n!pip install pyCalor\n\nfrom pyCalor import thermo as th\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# critical point of water\nTc_K = 647.096 \npc_Pa = 22.060e6\n\n# triple point of water\nTtp_K = 273.16\nptp_Pa = 611.6"
            },
            {
                "step_name": "Calculations",
                "code": "# 6. Calculations (Code Cell)\n\n# Specific volume in m^3/kg\nv_m3PerKg = np.linspace(0.8e-3, 1, 100)\n\n# Use pyCalor to get the constants for the Redlich-Kwong EoS for water\nsubstance = 'water'\n\nst = th.state(substance, T=(Tc_K, 'K'), p=(pc_Pa/1000, 'kpa'), eq_of_state='Redlich_Kwong')\nR_JperKgPerK = st.R\na_RK = st.a_RK\nb_RK = st.b_RK\n\n# Redlich-Kwong equation\ndef p_RK(T, v):\n    # T in K, v in m^3/kg, R in J/kgK, p in Pa\n    p = (R_JperKgPerK * T) / (v - b_RK) - a_RK / (v * np.sqrt(T) * (v + b_RK))\n    return p\n\n# Calculate pressure for the critical isotherm (Tc)\np_RK_Tc_Pa = p_RK(Tc_K, v_m3PerKg)\np_RK_Ttp_Pa = p_RK(Ttp_K, v_m3PerKg)\n\n# Plotting\nplt.figure(figsize=(10, 6))\n\n# Redlich-Kwong isotherms\nplt.plot(v_m3PerKg, p_RK_Tc_Pa/1e6, 'r-', label=f'$T_c = {Tc_K:.0f}$ K (RK EoS)')\nplt.plot(v_m3PerKg, p_RK_Ttp_Pa/1e6, 'b--', label=f'$T_{{tp}} = {Ttp_K:.0f}$ K (RK EoS)')\n\n# Critical point marker\nplt.plot(st.v, st.p/1e6, 'ro', markersize=8, label='Critical Point')\n\n# Compare with pyCalor/CoolProp\nv_list = []\np_list = []\nfor v_i in v_m3PerKg:\n    try:\n        st_coolprop = th.state(substance, T=(Tc_K, 'K'), v=(v_i, 'm3/kg'))\n        v_list.append(st_coolprop.v)\n        p_list.append(st_coolprop.p)\n    except:\n        pass\n\nplt.plot(v_list, np.array(p_list)/1e6, 'g--', label='$T_c$ (CoolProp)')\n\nax = plt.gca()\nxmin = 0.8e-3\nxmax = 1\nax.set_xlim([xmin, xmax])\nymin = 0\nymax = 25\nax.set_ylim([ymin, ymax])\n\nax.set_xlabel('$v$ (m$^3$/kg)')\nax.set_ylabel('$p$ (MPa)')"
            }
        ],
        "pedagogical_summary": "We were able to plot critical temperature isotherms for water using `pyCalor`, the Redlich-Kwong equation of state. The isotherms match very well for specific volume values greater than the critical specific volume. It would be interesting to see how this equation of state behaves for temperature values less than the critical temperature. Especially if it is possible to define the lines of saturation using this equation of state."
    },
    {
        "problem_title": "compressionProcess",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Properties",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_0uijb1pt",
                "subtopics": [
                    {
                        "key": "Fa25-L2a-9.0",
                        "title": "Energy transfer by work to a closed system"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 2,
                "title": "Energy, Energy Transfer, and General Energy Analysis",
                "sections": [
                    "Energy Transfer by Work",
                    "Mechanical Forms of Work"
                ]
            },
            "notes": ""
        },
        "problem_statement_raw": "A piston compresses a gas inside of it. Consider three different processes: isothermal, isobaric, and adiabatic. Create a plot of pressure vs. volume for these three different compression processes.",
        "schematic": "",
        "physical_laws_and_assumptions": "Process: Compress Gas\n\nReversible process:\n\nConsider a piston whose piston head area is, $S$. The piston head is displaced, compressing the gas inside of it. That gas inside is at a pressure, $p$. \n\nThe force applied to the piston head is:\n\n$$F = p S $$\n\nIf we shift the piston a distance, $dh$, an amount of work $dW$ is done:\n\n$$dW = p S dh $$\n\n$$W = \\int_A^B p dV $$\n\nLet's analyze the isothermal compression of an ideal gas in a piston. \n\n$$dU = \\delta Q - \\delta W $$\n\n$$ W = \\int_A^B p dV $$\n\nWe know from the ideal gas law that:\n\n$$p V = m R T$$\n\nwhich we can re-write as:\n\n$$p = \\frac{m R T}{V} $$\n\nTherefore, we have:\n\n$$ W = \\int_A^B \\frac{m R T}{V} dV $$\n\nSince $T$ is constant and it is a closed system (no mass transfer), we have:\n\n$$ W = m R T \\int_A^B \\frac{1}{V} dV $$\n\n$$ W = m R T \\ln \\frac{V_A}{V_B} $$",
        "pedagogical_summary": "If the state of the system can be represented on a $(p,V)$ diagram, the work performed during a transformation has a simple geometric representation. \n\nTransformations which are especially important are those for which the initial and final states are the same. these are called cyclical transformations or cycles. A cycle, therefore is a transformation which brings the system back to its initial state. If the state of the system can be represented on a volume pressure diagram then a cycle can be represented on this diagram by a closed curve, such as the curve, 1234.",
        "solution_code": [
            {
                "step_name": "Calculate Properties and Plot",
                "code": "## 5. Properties and 6. Calculations (Code Cell)\n\n# Import necessary libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Assumptions: Air as ideal gas, constant specific heats (k)\nR = 287 # J/(kg*K) - Specific gas constant for air\nk = 1.4 # Specific heat ratio for air (kappa)\n\n# Initial State (A)\nT_initial_C = 20 # Initial temperature in Celsius\nT_initial_K = T_initial_C + 273.15 # Initial temperature in Kelvin\np_initial_Pa = 101325 # Initial pressure in Pa (approx 1 atm)\nV_initial = 0.05 # Initial Volume in m^3\n\n# Final State (B)\nV_final = 0.01 # Final Volume in m^3 (Compression)\n\n# Calculate mass for the ideal gas\nm_kg = (p_initial_Pa * V_initial) / (R * T_initial_K)\n\n# -----------------\n# Isothermal Process (T = const)\n# p V = const => p_A V_A = p_B V_B\np_final_isothermal = p_initial_Pa * (V_initial / V_final)\n\n# -----------------\n# Isobaric Process (p = const) - Compression is not typically isobaric, but plot it for comparison\n# p_A = p_B\np_final_isobaric = p_initial_Pa\n\n# -----------------\n# Adiabatic Process (p V^k = const)\n# p_A V_A^k = p_B V_B^k\np_final_adiabatic = p_initial_Pa * (V_initial / V_final)**k\n\n# -----------------\n# Create P-V curves for plotting\n\n# Volume range for the process\nV_range = np.linspace(V_final, V_initial, 100)\n\n# Isothermal curve: p = (p_initial * V_initial) / V\nP_isothermal = (p_initial_Pa * V_initial) / V_range\n\n# Isobaric curve: p = p_initial\nP_isobaric = np.full_like(V_range, p_initial_Pa)\n\n# Adiabatic curve: p = (p_initial * V_initial^k) / V^k\nP_adiabatic = p_initial_Pa * (V_initial / V_range)**k\n\n# -----------------\n# Plotting\n\nplt.figure(figsize=(10, 7))\n\n# Plot the three processes\nplt.plot(V_range, P_isothermal / 1000, label='Isothermal ($T$=const)', linestyle='--', color='blue')\nplt.plot(V_range, P_adiabatic / 1000, label='Adiabatic ($pV^k$=const)', color='red')\n# Note: Isobaric compression to a smaller volume is physically unrealistic unless heat is removed and the pressure is held constant via external means, but plot it for comparison.\nplt.plot(V_range, P_isobaric / 1000, label='Isobaric ($p$=const)', linestyle=':', color='green')\n\n\n# Plot initial and final points\nplt.plot(V_initial, p_initial_Pa / 1000, 'o', color='black', markersize=8, label='Initial State (A)')\nplt.plot(V_final, p_final_isothermal / 1000, 'x', color='blue', markersize=8)\nplt.plot(V_final, p_final_adiabatic / 1000, 'x', color='red', markersize=8)\nplt.plot(V_final, p_final_isobaric / 1000, 'x', color='green', markersize=8)\n\n# Annotate the states\nplt.annotate('A (Initial)', xy=(V_initial, p_initial_Pa / 1000), xytext=(5, 5), textcoords='offset points', fontsize=10)\nplt.annotate('B_iso', xy=(V_final, p_final_isothermal / 1000), xytext=(-20, -10), textcoords='offset points', fontsize=10)\nplt.annotate('B_adia', xy=(V_final, p_final_adiabatic / 1000), xytext=(-20, 10), textcoords='offset points', fontsize=10)\nplt.annotate('B_isoba', xy=(V_final, p_final_isobaric / 1000), xytext=(-20, -10), textcoords='offset points', fontsize=10)\n\n# Labels and Title\nplt.xlabel('$V$ (m^3)')\nplt.ylabel('$p$ (kPa)')\nplt.title('P-V Diagram for Different Compression Processes')\nplt.grid(True)\nplt.legend()\n\n# Set axis limits\nplt.xlim(0, V_initial * 1.1)\nmax_p = max(p_final_adiabatic, p_final_isothermal, p_final_isobaric)\nplt.ylim(0, max_p * 1.1 / 1000)\n\n# Show the plot\n# plt.savefig('p-V-compression.png')\nplt.show()"
            }
        ]
    },
    {
        "problem_title": "waterPropertiesPyCalor",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Properties",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_qk0vncag",
                "subtopics": [
                    {
                        "key": "Fa25-L3a-7.0",
                        "title": "Determine the properties of water at 200 deg. C and 150 kPa"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": null,
                "title": "",
                "sections": []
            }
        },
        "notes": "https://pypi.org/project/pyCalor/",
        "problem_statement_raw": "Consider water at a temperature $T = 200^\\circ$C and pressure $p = 150$ kPa. Determine: Its state. Its specific volume. Its internal energy.",
        "schematic_raw": "No schematic",
        "physical_laws_and_assumptions": "Pure substance. Dependent properties only depend upon two independent properties. We can use the property tables in the book to determine the answers or we can use \"digital\" tables. Here we will use the digital tables. In order to calculate a thermodynamic property, we need to define several properties, such as temperature $T$ and pressure $p$, and for vapor-liquid mixtures, the quality $x$. We then have enough information to calculate all of the thermodynamic properties at this state. The first step in determining properties like $p$, specific entropy $s$, specific enthalpy $h$, etc., is to use the `pyCalor` module.",
        "solution_code": [
            {
                "step_name": "5. Properties",
                "code": "T1_C = 200\np1_kPa = 150\n\n# conversion \np1_MPa = p1_kPa/1000\nT1_K = T1_C + 273.15"
            },
            {
                "step_name": "6. Calculations",
                "code": "# !pip install pyCalor\nfrom pyCalor import thermo as th\n\n# water at 200 deg C and 150 kPa\nwater = th.state('water', T=(T1_C,'C'), p=(p1_kPa, 'kPa'), name=\"1\")\n\n# The state is\nstate = water.state_2phase\nprint(f\"The state is: {state}\")\n\n# properties\ns1 = water.s\nh1 = water.h\nv1 = water.v\nu1 = water.u\n\nprint('The specific entropy is: {0:1.4f} kJ/kg*K'.format(s1))\nprint('The specific enthalpy is: {0:1.4f} kJ/kg'.format(h1))\nprint('The specific volume is: {0:1.4f} m3/kg'.format(v1))\nprint('The specific internal energy is: {0:1.4f} kJ/kg'.format(u1))\n\n# We can also display this on a plot\nwater.plot(\"pv\") # supported plots are: \"pv\",\"Ts\",\"ph\""
            }
        ],
        "pedagogical_summary": "Based on this plot, we can see that water is in a superheated vapor state. Since it is in a superheated vapor state, that is why pressure and temperature are independent variables. If it was in the saturated liquid-vapor region, that would not be the case."
    },
    {
        "problem_title": "throttlingPyCalor",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Control Volumes",
        "course_reference": {
            "lecture_id": "1_97hqf37r",
            "subtopics": [
                {
                    "key": "Fa25-L5c-1.0",
                    "title": "Throttling and Expansion Valves"
                }
            ],
            "book_reference": {
                "chapter_number": 5,
                "title": "Mass and Energy Analysis of Control Volumes",
                "sections": [
                    "Some Steady-Flow Engineering Devices"
                ]
            }
        },
        "problem_statement_raw": "Refrigerant-134a enters a throttling valve at $p_3=$0.8 MPa and $T_3=$50$^\\circ$C and exits at $p_4=$0.15 MPa. Goal: * Determine the exit temperature of the throttling device, $T_4$.",
        "physical_laws_and_assumptions": "Schematic: Draw a schematic of a throttling device. Indicate that there is no heat transfer or work transfer in or out. Assumptions and Approximations: * Adiabatic * No work transfer * Neglect kinetic and potential energy * Steady-flow system * Determine properties using `pyCalor`. Physical Laws and Governing Equations: Conservation of mass: $$\\frac{dm_\\text{CV}}{dt} = \\dot{m}_\\text{in} - \\dot{m}_\\text{out} $$ Steady flow: $$0 = \\dot{m}_\\text{in} - \\dot{m}_\\text{out} $$ $$\\dot{m}_\\text{in} = \\dot{m}_\\text{out} = \\dot{m}$$ Conservation of energy: Conservation of mass: $$\\frac{dE_\\text{CV}}{dt} = \\dot{E}_\\text{in} - \\dot{E}_\\text{out} $$ Steady flow: $$0 = \\dot{E}_\\text{in} - \\dot{E}_\\text{out} $$ $$\\dot{E}_\\text{in} = \\dot{E}_\\text{out}$$ $$\\dot{W}_\\text{in} + \\dot{Q}_\\text{in} + \\dot{m} \\left(h_3 + (w_3^2/2) + g z_3 \\right) = \\dot{W}_\\text{out} + \\dot{Q}_\\text{out} + \\dot{m} \\left(h_4 + (w_4^2/2) + g z_4 \\right)$$ Neglecting changes in kinetic and potential energy; no work transfer; no heat transfer: $$h_3 = h_4 $$ We see that this process is isenthalpic. By determining $h_4$, we can now determine state 4 since we know $p_4$.",
        "pedagogical_summary": "Since it's an isenthalpic process, we are able to determine the downstream specific enthalpy. By knowing that and the pressure, which is given, we were able to determine the temperature. We also see that the temperature is lower after throttling, which is the purpose of the device.",
        "solution_code": [
            {
                "step_name": "Install pyCalor",
                "code": "!pip install pyCalor"
            },
            {
                "step_name": "Determine Properties (State 3 and State 4)",
                "code": "## 5. Properties (Code Cell)\nfrom pyCalor import thermo as th\n\nmdot_kgPerS = 0.05\nfluid = 'R134a'\n\n# state 3\np3_MPa = 0.8\nx3 = 0.0\nst3 = th.state(fluid,p=(p3_MPa,'Mpa'),x=x3,name='3')\n\n# state 4\np4_MPa = 0.15\n# isenthalpic process, 3 to 4, h4 = st3.h\nst4 = th.state(fluid,h=st3.h,p=(p4_MPa,'Mpa'),name='4')"
            },
            {
                "step_name": "Calculate Exit Temperature T4",
                "code": "## 6 Calculations (Code Cell)\nT4_K = st4.T; print(T4_K)"
            }
        ]
    },
    {
        "problem_title": "vanDerWaalsEquationOfState",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "hard"
        ],
        "topic": "Properties",
        "notes": "",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_blyiho9t",
                "subtopics": [
                    {
                        "key": "Fa25-L3b-5.0",
                        "title": "van der Waals equation of state"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 3,
                "title": "Properties of Pure Substances",
                "sections": [
                    "Other Equations of State"
                ]
            }
        },
        "problem_statement_raw": "The van der Waals equation is defined as: $$\\left(p + \\frac{a}{v^2} \\right) \\left(v - b \\right) = RT $$ where $p$ is pressure, $v$ is specific volume, $R$ is the specific gas constant, $T$ is temperature, and $a$ and $b$ are constants. Goal: Plot the critical point on a pressure-specific volume diagram. Determine $a$ and $b$ for water given its critical temperature, $T_\\text{cr}$ and critical pressure, $p_\\text{cr}$.",
        "physical_laws_and_assumptions": "Pure substance. Dependent properties only depend upon two independent properties. van der Waals equation of state: $$\\left(p + \\frac{a}{v^2} \\right) \\left(v - b \\right) = RT $$ $$p v + \\frac{a}{v} - pb - \\frac{ab}{v^2} - RT = 0 $$ Multiplying both sides by $\\frac{v^2}{p}$ $$\\frac{v^2}{p}\\left( p v + \\frac{a}{v} - pb - \\frac{ab}{v^2} - RT \\right) = 0 $$ $$\\left( v^3 + \\frac{a v}{p} - v^2b - \\frac{ab}{p} - \\frac{RTv^2}{p} \\right) = 0 $$ We can re-arrange as powers of $v$. $$v^3 - \\left[b + \\frac{RT}{p} \\right]v^2 + \\left[ \\frac{a}{p} \\right]v - \\left[ \\frac{ab}{p} \\right] = 0 $$ This is a cubic equation with three solutions. At the critical point all of these solutions of $v$ are equal to $v_\\text{cr}$. Also note that is $T$ becomes large, we recover the ideal gas equation. Setting specific volume equal to the critical specific volume: $$v = v_\\text{cr} $$ $$v - v_\\text{cr} = 0 $$ $$\\left( v - v_\\text{cr} \\right)^3 = 0 $$ Expanding this formula we have: $$v^3 - \\left[ 3v_\\text{cr} \\right] v^2 + \\left[ 3v_\\text{cr}^2 \\right] v - \\left[ v_\\text{cr}^3 \\right] = 0 $$ This equation is the same form as the van der Waals equation. Therefore we can set the coefficients equal to each other: $$3 v_\\text{cr} = b + \\frac{RT_\\text{cr}}{p_\\text{cr}} \\tag{1}$$ $$3 v^2_\\text{cr} = \\frac{a}{p_\\text{cr}} \\tag{2}$$ $$v^3_\\text{cr} = \\frac{ab}{p_\\text{cr}} \\tag{3}$$ We can divide equation (3) by equation (2), resulting in: $$(1/3)v_\\text{cr} = b \\implies v_\\text{cr} = 3b \\tag{4}$$ Substituting equation (4) into equation (2), yields: $$3 (3b)^2 = \\frac{a}{p_\\text{cr}} \\implies p_\\text{cr} = \\frac{a}{27 b^2} \\tag{5}$$ Substituting equation (5) into equation (1) yields: $$9b = b + \\frac{RT_\\text{cr}}{\\frac{a}{27 b^2}}$$ $$8b = \\frac{27 b^2RT_\\text{cr}}{a}$$ $$T_\\text{cr} = \\frac{8a}{27 b R} \\tag{6}$$ From equation (4) we have: $$b = \\frac{v_\\text{cr}}{3} \\tag{7}$$ From equations (5) and (7) we have: $$p_\\text{cr} = \\frac{a}{27 \\left(\\frac{v_\\text{cr}}{3} \\right)^2}$$ $$\\implies a = 3 p_\\text{cr} v_\\text{cr}^2 \\tag{8}$$ Alternatively we can write: $$ T_\\text{cr} = \\frac{8ab}{27b^2R} $$ $$ T_\\text{cr} = \\frac{a}{27b^2}\\frac{8b}{R} $$ $$ T_\\text{cr} = p_\\text{cr}\\frac{8b}{R} $$ $$\\implies b = \\frac{R T_\\text{cr}}{8 p_\\text{cr}} $$ We can also write: $$b = \\frac{v_\\text{cr}}{3} = \\frac{R T_\\text{cr}}{8 p_\\text{cr}}$$ $$\\implies v_\\text{cr} = \\frac{3 R T_\\text{cr}}{8 p_\\text{cr}}$$ From equation (8) we can write: $$a = \\frac{27 R^2 T_\\text{cr}^2}{64 p_\\text{cr}} $$ We have now defined the coefficients $a$ and $b$ as a function of the critical temperature and pressure: $$a = \\frac{27 R^2 T_\\text{cr}^2}{64 p_\\text{cr}} $$ $$b = \\frac{v_\\text{cr}}{3} = \\frac{R T_\\text{cr}}{8 p_\\text{cr}}$$.",
        "solution_code": [
            {
                "step_name": "Properties",
                "code": "## 5. Properties (Code Cell)\n# critical temperature and pressure can be found as\nTcr_K = 647.3\npcr_kPa = 22.09e3"
            },
            {
                "step_name": "Calculations",
                "code": "# 6 Calculations (Code Cell)\n!pip install pyCalor\n\nfrom pyCalor import thermo as th\n# determine the critical state using pyCalor\nst1 = th.state('water', T=Tcr_K, p=pcr_kPa, name=\"1\")\n\n# plot the critical point on a pressure-specific volume diagram\nst1.plot(\"pv\")\n\n# calculate a and b\n# a = 27*R^2*Tcr^2/(64*pcr)\n# b = R*Tcr/(8*pcr)\n\n# we can determine R from pyCalor\nR_water_kJperKgPerK = th.substance('water').R\nR_water_kPaM3perKgPerK = R_water_kJperKgPerK * 1000 # R in (kPa m^3)/(kg K)\n\na = 27*R_water_kPaM3perKgPerK**2 * Tcr_K**2 / (64*pcr_kPa)\n\nb = R_water_kPaM3perKgPerK * Tcr_K / (8*pcr_kPa)\n\nprint(f\"a = {a:.2f} kPa (m^3/kg)^2\")\nprint(f\"b = {b:.5f} m^3/kg\")"
            }
        ],
        "pedagogical_summary": "We were able to plot the critical point of water on the pressure-specific volume diagram. It should be at the point where the lines of saturated liquid and vapor meet, which it is. By knowing $a$ and $b$ we can also plot the isotherm from the van der Waals equation of state and compare it with the isotherm produced by pyCalor."
    },
    {
        "problem_title": "propertiesIndependentDependent",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "medium"
        ],
        "topic": "Properties",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_r5zqwxag",
                "subtopics": [
                    {
                        "key": "Fa25-L1b-5.0",
                        "title": "Independent and Dependent Properties"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 3,
                "title": "Properties of Pure Substances",
                "sections": [
                    "Property Diagrams for Phase-Change Processes"
                ]
            },
            "notes": ""
        },
        "problem_statement_raw": "In a single-phase region of a pure substance, any two independent intensive properties are sufficient to fix the state. The properties can be related by a general function: $$x_3 = f(x_1, x_2)$$ Where $x_1$ and $x_2$ are the two independent properties, and $x_3$ is the dependent property. Goal: Plot the relationship between a dependent property ($x_3$) and two independent properties ($x_1$ and $x_2$). Plot a 2D curve of $x_3$ vs. $x_2$ by holding $x_1$ constant.",
        "physical_laws_and_assumptions": "We will use a simple, linear function to represent the property relationship for demonstration purposes. We will assume the properties are pressure ($x_1=p$), specific volume ($x_2=v$), and specific internal energy ($x_3=u$), which are related by $u = f(p, v)$. The function used is: $$u = C_1 + C_2 \\cdot p \\cdot v$$where $C_1 = 5$ and $C_2 = 10$. State Postulate: For a simple compressible system, the state is completely specified by two independent, intensive properties. Generalized Property Function:$$x_3 = f(x_1, x_2)$$Demonstration Function:$$u = C_1 + C_2 \\cdot p \\cdot v$$",
        "solution_code": [
            {
                "step_name": "Properties",
                "code": "# 5. Properties (Code Cell)\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Define the constants for the demonstration function\nC1 = 5\nC2 = 10\n\n# Define the property relationship function: x3 = f(x1, x2) or u = f(p, v)\ndef property_function(x1, x2):\n    # x1 = p, x2 = v, x3 = u\n    return C1 + C2 * x1 * x2\n\n# Define ranges for the independent variables (p and v)\n# p (pressure) range\nx1_min, x1_max = 10, 50\n# v (specific volume) range\nx2_min, x2_max = 0, 10\n\nx1 = np.linspace(x1_min, x1_max, 50)\nx2 = np.linspace(x2_min, x2_max, 50)\n\n# Create a meshgrid for the surface plot\nX1, X2 = np.meshgrid(x1, x2)\n# Calculate the dependent property (u)\nX3 = property_function(X1, X2)"
            },
            {
                "step_name": "Calculations",
                "code": "# 6. Calculations (Code Cell)\n\n# 3D Plot of the surface x3 = f(x1, x2)\nfig = plt.figure(figsize=(10, 8))\nax = fig.add_subplot(111, projection='3d')\n\n# Plot the surface\nsurf = ax.plot_surface(X1, X2, X3, cmap='viridis', edgecolor='none')\n\n# Add a color bar\nfig.colorbar(surf, ax=ax, shrink=0.5, aspect=5, label='$x_3=u$ (Dependent Property)')\n\n# Set labels and title for the 3D plot\nax.set_xlabel('$x_1=p$ (Independent Variable 1)', fontsize=12)\nax.set_ylabel('$x_2=v$ (Independent Variable 2)', fontsize=12)\nax.set_zlabel('$x_3=u$ (Dependent Property)', fontsize=12)\nax.set_title(f'Property Surface: $u = {C1} + {C2}pv$', fontsize=16)\n\n# Show the plot\n# plt.show()\n\n# 2D Plot for a fixed x1 (p = constant)\nfixed_x1_value = 30 # Example constant pressure\n\n# Calculate x3 for the fixed x1 and the range of x2\nx3_fixed_x1 = property_function(fixed_x1_value, x2)\n\nplt.figure(figsize=(8, 6))\nplt.plot(x2, x3_fixed_x1, 'b-', label=f'Fixed $x_1=p={fixed_x1_value}$')\n\n# Add a point to highlight the fixed x1\n# We're showing a specific point on the curve, e.g., when x2 = 0\npoint_x2 = 0.0\npoint_x3 = property_function(fixed_x1_value, point_x2)\nplt.scatter(point_x2, point_x3, color='red', s=100, zorder=5, label=f'Point at $x_2$={point_x2}')\nplt.annotate(f'($x_2$={point_x2}, $x_3$={point_x3:.2f})', (point_x2, point_x3),\n             textcoords=\"offset points\", xytext=(0,10), ha='center', fontsize=10, color='red')\n\n# Set labels and title for the 2D plot\nplt.xlabel('$x_2=v$ (Independent Variable 2)', fontsize=12)\nplt.ylabel('$x_3=u$ (Dependent Property P)', fontsize=12)\nplt.title(f'2D Plot: $x_3 = {C1} + {C2}({fixed_x1_value})x_2$ for fixed $x_1 = p = {fixed_x1_value}$', fontsize=14)\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\n# plt.show()"
            }
        ],
        "pedagogical_summary": "This exercise demonstrates the concept of the State Postulate in thermodynamics. By fixing two independent intensive properties ($x_1$ and $x_2$), all other dependent intensive properties ($x_3$) are fixed. The surface plot shows that $x_3$ is a function of both $x_1$ and $x_2$. The 2D plot, where $x_1$ is constant, illustrates how a specific state (a point on the surface) is fixed when a value for $x_2$ is chosen."
    },
    {
        "problem_title": "energyTransferClosedSystem",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Properties",
        "lecture_reference": {
            "lecture_id": "1_0uijb1pt",
            "subtopics": [
                {
                    "key": "Fa25-L2a-11.0",
                    "title": "Energy balance of a system"
                }
            ]
        },
        "book_reference": {
            "chapter_number": 2,
            "title": "Energy, Energy Transfer, and General Energy Analysis",
            "sections": [
                "Energy Transfer by Work"
            ]
        },
        "notes": "",
        "problem_statement_raw": "Consider a closed system containing a fluid. The initial internal energy, $U_1$ is given. Shaft work is transferred in and heat is transferred out. \nGoal Determine the final internal energy, $U_2$.\nDraw a control volume around the container. A paddle is inside of the control volume. The control volume is not insulated. Indicate that work is transferred in and heat is transferred out.",
        "physical_laws_and_assumptions": "Closed System (no mass crosses the boundary).\nNeglect kinetic and potential energy ($\\Delta KE \\approx 0$, $\\Delta PE \\approx 0$).\nConservation of energy:\n$$E_\\text{in} - E_\\text{out} = (Q_\\text{in} - Q_\\text{out}) + (W_\\text{in} - W_\\text{out})$$\nNeglecting changes in kinetic and potential energy, we can write:\n$$ E_\\text{in} - E_\\text{out} = \\Delta E_\\text{system} = U_2 - U_1 $$\nOnly work in and heat out:\n$$U_2  = U_1 - Q_\\text{out} + W_\\text{in}$$",
        "solution_code": [
            {
                "step_name": "Properties (Code Cell)",
                "code": "## 5. Properties (Code Cell)\nQout_kJ = 500\nWin_kJ = 100\n\nU1_kJ = 800"
            },
            {
                "step_name": "Calculations (Code Cell)",
                "code": "# 6 Calculations (Code Cell)\nU2_kJ = U1_kJ + (-Qout_kJ) - (-Win_kJ); print(U2_kJ)"
            }
        ],
        "pedagogical_summary": "From the first law of thermodynamics, since we are transferring more energy out than in, we would expect that the internal energy at state 2 is less than state 1."
    },
    {
        "problem_title": "waterPhaseDiagram",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Properties",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_r5zqwxag",
                "subtopics": [
                    {
                        "key": "Fa25-L1b-10.0",
                        "title": "Thermodynamics: State of a pure substance"
                    },
                    {
                        "key": "Fa25-L1b-12.0",
                        "title": "Thermodynamics: Transformation or Process"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 3,
                "title": "Properties of Pure Substances",
                "sections": [
                    "Property Diagrams for Phase-Change Processes"
                ]
            }
        },
        "notes": "",
        "problem_statement_raw": "Use the thermodynamic python module, `pyCalor`, to create saturated liquid and vapor lines on a pressure-volume diagram. Also given a temperature, $T_1$, and vapor quality, $x_1$, define a state and plot that point on the pressure-volume diagram.",
        "schematic_raw": "No schematic",
        "physical_laws_and_assumptions": "We cannot use a simple equation of state like the ideal gas law to create such a diagram for water. We have to use thermophysical property databases such as `pyCalor`.",
        "solution_code": [
            {
                "step_name": "Properties",
                "code": "!pip install pyCalor\nfrom pyCalor import thermo as th\nT1_C = 50\nx1 = 1\nT2_C = 1000\nsubstance = 'water'\nst1 = th.state(substance, T=(T1_C,'C'), x=x1, name=\"1\")\nst2 = th.state(substance, T=(T2_C,'C'), p=st1.p, name=\"2\")"
            },
            {
                "step_name": "Calculations",
                "code": "st1.plot(\"pv\",isoProp=\"T\"); # supported plots are: \"pv\",\"Ts\",\"ph\"\npr = th.process([(st1,st2)])\npr.plot('pv');"
            }
        ],
        "pedagogical_summary": "By using `pyCalor` we were able to create pressure-volume diagrams. We were able to define two states and we were able to connect those states through a process. This is very useful, especially when it comes to making cycles."
    },
    {
        "problem_title": "entropyHeatTransferSteadyFlow",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "medium"
        ],
        "topic": "Properties",
        "lecture_reference": {
            "lecture_id": "",
            "subtopics": [
                {
                    "key": "Fa25-L7d-X.X",
                    "title": "."
                }
            ]
        },
        "book_reference": {
            "chapter_number": 7,
            "title": "Entropy",
            "sections": [
                "The Increase of Entropy Principle"
            ]
        },
        "notes": "",
        "problem_statement_raw": "Consider a process of a steady flow system that undergoes a reversible, constant volume, isentropic process followed by a polytropic process. The fluid is water. Goal: Determine the heat transferred into the fluid. Plot the process on a T-s diagram. Draw a control volume around the steady-flow system. Indicate that heat is transferred in.",
        "physical_laws_and_assumptions": "Reversible process\nSteady-flow\nNeglect changes in kinetic and potential energy\nFirst Law (Energy Balance):\n$$\\dot{Q}_{in} - \\dot{W}_{out} = \\dot{m} (h_2 - h_1)$$\nSecond Law (Entropy Balance):\n$$\\dot{S}_{gen} = \\frac{\\dot{Q}_{out}}{T_b} + \\dot{m} (s_2 - s_1) = 0$$\nwhere $T_b$ is the boundary temperature.\n$$\\delta q_{rev} = T ds$$\nThe heat transferred can be determined by the area under the $T-s$ curve. The process from 1 to 2 is:\n$1 \\to 2$\nReversible\nConstant Volume\n$q_{1-2} = \\int_1^2 T ds$\n$2 \\to 3$\nIsentropic (reversible, adiabatic)\n$s_3 = s_2$\n$q_{2-3} = 0$\nOverall\n$q_{1-3} = q_{1-2} + q_{2-3}$",
        "solution_code": [
            {
                "step_name": "Properties (Code Cell)",
                "code": "## 5. Properties (Code Cell)\nT1_C = 20\ns1_kJperKgPerK = 0.3\ns2_kJperKgPerK = 0.5\nT2_C = 80\nT3_C = 60\n\nT1_K = T1_C + 273.15\nT2_K = T2_C + 273.15\nT3_K = T3_C + 273.15"
            },
            {
                "step_name": "Calculations (Code Cell)",
                "code": "# 6 Calculations (Code Cell)\n# q = T ds # kJ/kg\n# Integrating the areas under the T-s curve\nq12_kJperKg = T2_K*(s2_kJperKgPerK-s1_kJperKgPerK) + (T1_K - T2_K)*(s2_kJperKgPerK-s1_kJperKgPerK)/2\n# process 2 to 3 is isentropic\nq23_kJperKg = 0\n# sum of the heat transferred from states 1 to 2 and 2 to 3\nq13_kJperKg = q12_kJperKg + q23_kJperKg\nprint(q13_kJperKg)"
            }
        ],
        "pedagogical_summary": "We expected the sign of $q$ to be positive since entropy was increasing from states 1 to 2."
    },
    {
        "problem_title": "compressorPyCalor",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Control Volumes",
        "course_reference": {
            "lecture_id": "1_hb7swztw",
            "subtopics": [
                {
                    "key": "Fa25-L5b-3.0",
                    "title": "Example: Energy Analysis of a Steady-flow System: Compressor"
                }
            ],
            "book_reference": {
                "chapter_number": 5,
                "title": "Mass and Energy Analysis of Control Volumes",
                "sections": [
                    "Some Steady-Flow Engineering Devices"
                ]
            }
        },
        "problem_statement_raw": "Air enters a compressor with a mass flow rate of 0.02 kg/s at 100 kPa and 290 K and exits the compressor at 600 kPa and 500 K. The compressor is cooled with 1 kJ/kg. \nGoal: \nDetermine the shaft power input.\nDraw a compressor with a control volume drawn around it. Indicate that power is transferred in from a shaft and heat is transferred out.",
        "physical_laws_and_assumptions": "Neglect kinetic and potential energy\nSteady-flow system\nDetermine properties using `pyCalor`. \nChanges in enthalpy can be determined from $dh = c_p dT$ by assuming that air is an ideal gas.  \nConservation of energy for a compressor:\n$$\\dot{W}_\\text{in} = \\dot{m} \\left(h_2 - h_1 \\right) $$\nAssuming air behaves as an ideal gas, we can write:\n$$\\dot{W}_\\text{in} \\approx \\dot{m} c_p \\left(T_2 - T_1 \\right) $$",
        "solution_code": [
            {
                "step_name": "Properties (Code Cell)",
                "code": "## 5. Properties (Code Cell)\n!pip install pyCalor\nfrom pyCalor import thermo as th\n\n#For the properties, I am using the notation \"in\" and \"out\" as well as \"1\" and \"2\", where \"in\" is also \"1\" and \"out\" is also \"2\"\n\nfluid = 'Air'\n\nmdot_kgperS = 0.02 #kg/s\n\n# state 1\nP1_Pa = 100e3 #Pa\nT1_K = 290 #K\nst1 = th.state(fluid,T=(T1_K,'K'),p=(P1_Pa,'Pa'),name='1')\nh1_JperKg = st1.h*1e3\ncp_kJperKgPerK = st1.cp\n\n# state 2\nP2_Pa = 600e3 #Pa\nT2_K = 500 #K\nst2 = th.state(fluid,T=(T2_K,'K'),p=(P2_Pa,'Pa'),name='2')\nh2_JperKg = st2.h*1e3\n\nqout_JperKg = 1e3 #J/kg"
            },
            {
                "step_name": "Calculations (Code Cell)",
                "code": "## 6 Calculations (Code Cell)\nQdotOut_JperS = qout_JperKg*mdot_kgperS #J/s\n\nWdotIn_JperS = QdotOut_JperS + mdot_kgperS*(h2_JperKg-h1_JperKg); print(WdotIn_JperS) #J/s\n\npr = th.process([(st1,st2)])\n\npr.plot('pv')\n\n### Alternative solution\n\nWdotIn_JperS_alt = QdotOut_JperS + mdot_kgperS*(cp_kJperKgPerK*1e3)*(T2_K-T1_K); print(WdotIn_JperS_alt) #J/s\n\nerror = ((WdotIn_JperS - WdotIn_JperS_alt)/WdotIn_JperS)*100; print(error)"
            }
        ],
        "pedagogical_summary": "We see that the ideal gas assumption is a good one since the error for determining the shaft power input from $\\dot{W}_\\text{in} \\approx \\dot{m} c_p \\left(T_2 - T_1 \\right) + \\dot{Q}_\\text{out}$ is small."
    },
    {
        "problem_title": "isochoricCoolingIdealGas",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Properties",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_h0h8llrr",
                "subtopics": [
                    {
                        "key": "Fa25-L2b-7.0",
                        "title": "Isochoric cooling example"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 2,
                "title": "Energy, Energy Transfer, and General Energy Analysis",
                "sections": [
                    "Energy Transfer by Heat"
                ]
            },
            "notes": ""
        },
        "problem_statement_raw": "1 kg of air, treated as an ideal gas, is kept inside a rigid container. The initial pressure and temperature are 100 kPa and 100 deg. C. It is then cooled until it reaches 80 kPa. \n\nGoal\n- What is the final temperature?\n- How much heat is transferred out?",
        "physical_laws_and_assumptions": "Assumptions and Approximations:\nClosed System (no mass crosses the boundary).\nNeglect kinetic and potential energy ($\\Delta KE \\approx 0$, $\\Delta PE \\approx 0$).\nideal gas. Because it's an ideal gas, changes in internal energy only depends upon changes in temperature. \nIsochoric $v_2 = v_1$ (rigid container, no mass in or out)\n\nPhysical Laws and Governing Equations:\nConservation of energy:\n$$\\Delta E_\\text{system} = E_\\text{in} - E_\\text{out} = (W_\\text{in} + Q_\\text{in}) - (W_\\text{out} + Q_\\text{out})$$\n\nBy definition we can write that the changes in the energyof the system only depend on changes in internal energy, kinetic energy, and potential energy. \n\n$$\\Delta E_\\text{system} = \\Delta U + \\Delta KE + \\Delta PE $$\n\nNeglect kinetic and potential energy changes:\n\n$$\\Delta E_\\text{system} = \\Delta U $$\n\n$$\\Delta U = U_2 - U_1 = (Q_\\text{in} - Q_\\text{out}) + (W_\\text{in} - W_\\text{out}) $$\n\nVessel is cooled at constant volume. Therefore, no work transfer:\n\n$$\\Delta U = (Q_\\text{in} - Q_\\text{out})$$\n\nHeat is only transferred out:\n\n$$\\Delta U = U_2 - U_1 =  - Q_\\text{out}$$\n\nWe will show this later, but for an ideal gas, the change in internal energy only depends upon temperature, and the specific heat at constant volume, $c_V$ therefore:\n\n$$dU = m c_V dT $$\n\nTherefore,\n\n$$U_2 - U_1 = m c_V (T_2 - T_1) $$ \n\nSubstituting into above yields:\n\n$$U_2 - U_1 =  - Q_\\text{out} = m c_V (T_2 - T_1)$$\n\nRearranging:\n\n$$ Q_\\text{out} = m c_V (T_1 - T_2)$$",
        "solution_code": [
            {
                "step_name": "Properties",
                "code": "!pip install pyCalor\nfrom pyCalor import thermo as th\nimport matplotlib.pyplot as plt\n\nm_kg = 1\nR_JperKgPerK = 287\n\np1_Pa = 100e3\nT1_C = 100\n\np2_Pa = 80e3\n# T2_C = 25\n\n# ideal gas law\nv1_m3PerKg = (R_JperKgPerK*(T1_C+273.15))/p1_Pa\n\n# isochoric\nv2_m3PerKg = v1_m3PerKg\n\n# ideal gas to determine T2\nT2_K = (p2_Pa*v2_m3PerKg)/R_JperKgPerK\nT2_C = T2_K - 273.15\nprint(T2_C)"
            },
            {
                "step_name": "Calculations",
                "code": "cv_kJperKgPerK = 0.718\nQout_kJ = m_kg*cv_kJperKgPerK*(T1_C - T2_C)\nprint(Qout_kJ)\n\nst1 = th.state('air', p=p1_Pa/1000, T=T1_C+273.15, name=\"1\")\nst2 = th.state('air', p=p2_Pa/1000, T=T2_C+273.15, name=\"2\")\npr = th.process([(st1,st2)])\n\n# pr.plot('pv')\nplt.plot([st1.v, st2.v], [st1.p, st2.p], color='blue', linewidth=2)\n\nplt.plot(st1.v, st1.p, 'o', color='red', markersize=8)\nplt.annotate('State (1)', xy=(st1.v, st1.p),\n             textcoords=\"offset points\", xytext=(-30, 10), ha='center', fontsize=12)\n\nplt.plot(st2.v, st2.p, 'o', color='red', markersize=8)\nplt.annotate('State (2)', xy=(st2.v, st2.p),\n             textcoords=\"offset points\", xytext=(-30, 10), ha='center', fontsize=12)\n\nplt.xlabel('$v$ (m^3/kg)', fontsize=14)\nplt.ylabel('$p$ (Pa)', fontsize=14)\n\nplt.grid(True)\n\nplt.xlim(0, st1.v * 1.5)\nplt.ylim(0, st1.p * 1.2)\n\n# plt.savefig('p-V-isochoric-cooling-air.png')"
            }
        ],
        "pedagogical_summary": "The pressure-volume diagram makes sense. Pressure decreases while volume is kept the same. We expected the pressure to decrease since we are transferring energy out. As volume is kept constant, there is no work transfer."
    },
    {
        "problem_title": "nitrogenHeatingWorkTransfer",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Closed Systems",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_3375c5yj",
                "subtopics": [
                    {
                        "key": "Fa25-L4c-2.0",
                        "title": "Electrical heating and cooling of a cylinder containing nitrogen at constant pressure"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 4,
                "title": "Energy Analysis of Closed Systems",
                "sections": [
                    "Moving Boundary Work",
                    "Energy Balance for Closed Systems"
                ]
            },
            "notes": ""
        },
        "problem_statement_raw": "A piston cylinder contains nitrogen initially at 400 kPa, 27$^\\circ$C, and 0.5 m$^3$. The piston contains a resistor. The pressure in the piston is kept constant while 120 V is applied to the resistor resulting in 2 A flowing thorugh it for 5 min. The piston is also cooled, transferring 2800 J out. Goal: Determine the final temperature, $T_2$. Draw a schematic of a piston cylinder. Show that electrical work is transferred into the piston and heat is transferred out of it. The fluid in the piston cylinder is nitrogen.",
        "physical_laws_and_assumptions": "Ideal gas, undergoes quasi-equilibrium expansion or compression Use `pyCalor` to determine nitrogens properties. In an alternative solution we can treat nitrogen as an ideal gas. Neglect kinetic and potential energy Boundary work is transferred through expansion ($p dV$). Closed system (no mass in or out) Constant values for specific heat Conservation of energy Ideal gas law Conservation of energy: $$\\Delta E_\\text{CV} = E_\\text{in} - E_\\text{out} $$ $$\\Delta U + \\Delta KE + \\Delta PE = (W_\\text{in} + Q_\\text{in}) - (W_\\text{out} + Q_\\text{out})  $$ Neglect changes in kinetic and potential energy: $$\\Delta U = (W_\\text{in}) - (W_\\text{out} + Q_\\text{out}) $$ $$ W_\\text{out} = p_1 (V_2 - V_1) $$ $$ W_\\text{out} = p_1 m (v_2 - v_1) $$ $$ W_\\text{in} = \\text{V} I \\Delta t $$ Combining yields: $$m (u_2 - u_1) = \\text{V} I \\Delta t  - p_1 m (v_2 - v_1)  - Q_\\text{out} $$ Rearranging: $$m \\left[ \\left(u_2 + p_1 v_2\\right) - \\left( u_1 + p_1 v_1 \\right) \\right] = \\text{V} I \\Delta t   - Q_\\text{out} $$ Since $p_2 = p_1$, we have: $$m \\left[ \\left(u_2 + p_2 v_2\\right) - \\left( u_1 + p_1 v_1 \\right) \\right] = \\text{V} I \\Delta t   - Q_\\text{out} $$ The definition of enthalpy is: $$ h = u + p v$$ Therefore, $$m \\left[ h_2 - h_1 \\right] = \\text{V} I \\Delta t   - Q_\\text{out} $$ $$h_2  = \\text{V} I \\Delta t /m   - Q_\\text{out} / m + h_1$$ Picking up where we left off with our equation for enthalpy: $$h_2 = h_1 + (\\text{V} I t - Q_\\text{out})/m  $$ Recall that we can define changes in enthalpy as: $$ dh = c_p dT $$ Therefore, for constant specific heats: $$ h_2 - h_1 = c_p (T_2 - T_1) $$ Substituting yields: $$T_2 = T_1 + (\\text{V} I t - Q_\\text{out})/(c_p m)  $$ From the textbook we can determine the specific heat, $c_p$, or we can use pyCalor. ",
        "solution_code": [
            {
                "step_name": "Properties",
                "code": "# 5. Properties (Code Cell)\n!pip install pyCalor\nfrom pyCalor import thermo as th\n\nR_JperKgPerK = 296.8\nV1_m3 = 0.5\np1_Pa = 400e3\nT1_K = 27+273.15\nsubstance = 'nitrogen'\n\n# determine state 1 using pyCalor\nst1 = th.state(substance,T=(T1_K,'K'),p=(400,'kpa'),name='1')\nh1_JperKg = st1.h*1e3\n\n# determine the mass in the piston using the ideal gas law\nm_kg = (p1_Pa*V1_m3)/(R_JperKgPerK*T1_K); print(m_kg)\n\nQout_J = 2800\nVolt_V = 120\nI_A = 2\nt_s = 5*60"
            },
            {
                "step_name": "Calculations",
                "code": "# 6 Calculations (Code Cell)\n\nWin_J = Volt_V*I_A*t_s; print(Win_J)\n\nh2_JperKg = h1_JperKg + ((Win_J - Qout_J)/m_kg)\nh2_kJperKg = h2_JperKg/1e3\n\n# by knowing h2, we can determine state 2 using pyCalor\nst2 = th.state(substance,p=(p1_Pa/1e3,'kpa'),h=h2_kJperKg,name='2')\n\n# final answer, T2\nT2_C = st2.T-273.15\nprint(T2_C)\n\n# alternative solution\ncp_N2_JperKgPerK = 1.039*1e3\n\nT2_K_ = T1_K + ((Win_J - Qout_J)/(cp_N2_JperKgPerK*m_kg))\nprint(T2_K_-273.15)\n\nerror = (T2_K_ - st2.T)/st2.T; \nprint(error*100)"
            }
        ],
        "pedagogical_summary": "We see that the values for $T_2$ are the same for two different approaches. The assumption of constant specific heat values appears to be a good one."
    },
    {
        "problem_title": "coolingSolidBlock",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Closed Systems",
        "lecture_reference": {
            "lecture_id": "1_0r6wkz1o",
            "subtopics": [
                {
                    "key": "Fa25-L5a-1.0",
                    "title": "Cooling of a solid block"
                }
            ]
        },
        "book_reference": {
            "chapter_number": 4,
            "title": "Energy Analysis of Closed Systems",
            "sections": [
                "Internal Energy, Enthalpy, and Specific Heats of Solids and Liquids"
            ]
        },
        "notes": "",
        "problem_statement_raw": "A 50 kg iron block at a temperature of 80 deg C is immersed into a 0.5 m$^3$ water bath, which is initially at 25 deg C. Determine the temperature when equilibrium is reached. Goal: ... ",
        "physical_laws_and_assumptions": "Neglect kinetic and potential energy Closed system (no mass in or out) Constant values for specific heat No work transfer Conservation of energy. $$\\Delta E_\\text{CV1+CV2} = E_\\text{in,CV1+CV2} - E_\\text{out,CV1+CV2} $$ $$\\left( \\Delta U + \\Delta KE + \\Delta PE \\right)_\\text{CV1+CV2} = (W_\\text{in} + Q_\\text{in})_\\text{CV1+CV2} - (W_\\text{out} + Q_\\text{out})_\\text{CV1+CV2} $$ No work or heat transfer: $$\\left( \\Delta U \\right)_\\text{CV1+CV2} = 0 $$ $$\\Delta U_\\text{CV1} + \\Delta U_\\text{CV2} = 0 \\tag{1}$$ No heat will be transferred out of or into the combined control volumes of CV1 and CV2 (adiabatic). Change in internal energy of the iron block For incompressible solids: $$du = c_V(T)dT \\text{ (solids)} $$ $$\\Delta u = \\int_1^2c_V(T)dT \\approx c_\\text{V,avg}(T_2 - T_\\text{1,Fe}) $$ We will select the value of $c_\\text{V,Fe}$ at $T=T_\\text{1,Fe}$, $c_\\text{V,Fe}=c_\\text{V,Fe}(T_\\text{1,Fe})$. Substituting into equation (1): $$\\Delta U_\\text{CV1} = m_\\text{Fe} c_\\text{V,Fe} (T_2 - T_\\text{1,Fe}) \\tag{2} $$ Conservation of energy of the water bath For incompressible liquids, $c_p = c_V = c$, therefore: $$du = c_V(T)dT $$ $$\\Delta u = \\int_1^2c_V(T)dT \\approx c_\\text{V,avg}(T_2 - T_1) $$ We will select the value of $c_\\text{H2O}$ at $T=T_\\text{1,H2O}$, $c_\\text{V,H2O}=c_\\text{V,H2O}(T_\\text{1,H2O})$. (We will see in the property tables that the only value for specific heat that is available is for room temperature. This should be okay since the initial and final temperature difference is not that large.) Substituting into equation (1): $$\\Delta U_\\text{CV2} = m_\\text{H2O} c_\\text{V,H2O} (T_2 - T_\\text{1,H2O}) \\tag{3} $$ Combining equations (1)-(3): $$ m_\\text{Fe} c_\\text{V,Fe} (T_2 - T_\\text{1,Fe}) + m_\\text{H2O} c_\\text{V,H2O} (T_2 - T_\\text{1,H2O}) = 0 $$ Rearranging: $$ T_2  = \\frac{m_\\text{Fe} c_\\text{V,Fe} T_\\text{1,Fe} +  m_\\text{H2O} c_\\text{V,H2O} T_\\text{1,H2O}}{m_\\text{Fe} c_\\text{V,Fe} + m_\\text{H2O} c_\\text{V,H2O}} $$ When looking up property tables in the textbook, you will see that the only values that are available are $c_p$. Since the substances are incompressible, it is okay to substitute $c_p = c_V$ into the above equation. Alternative solution You could analyze CV1 and CV2, and set the heat transferred out of the iron block to be equal to the heat transferred into the water bath. The combined control volumes would be treated as adiabatic with no work transfer.",
        "solution_code": [
            {
                "step_name": "Properties (Code Cell)",
                "code": "## 5. Properties (Code Cell)\nvH2O_m3PerKg = 0.001\nVH2O_m3 = 0.5\n\nmH2O_kg = VH2O_m3/vH2O_m3PerKg\n\nmFe_kg = 50\n\nT1H2O_C = 25\nT1Fe_C = 80\n\ncFe_kJperKgPerK = 0.45 # taken at room temperature\ncH2O_kJperKgPerK = 4.18 # taken at 25 deg C"
            },
            {
                "step_name": "Calculations (Code Cell)",
                "code": "# 6 Calculations (Code Cell)\nT2_C = (mFe_kg*cFe_kJperKgPerK*T1Fe_C + mH2O_kg*cH2O_kJperKgPerK*T1H2O_C)/(mFe_kg*cFe_kJperKgPerK + mH2O_kg*cH2O_kJperKgPerK)\nprint(T2_C)"
            }
        ],
        "pedagogical_summary": "It makes sense that the final temperature, $T_2$, is between the initial iron and water temperature."
    },
    {
        "problem_title": "workMovingBoundary",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "medium"
        ],
        "topic": "Closed Systems",
        "notes": "",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_fclugwz7",
                "subtopics": [
                    {
                        "key": "Fa25-L4a-4.0",
                        "title": "Moving boundary polytropic processes"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 4,
                "title": "Energy Analysis of Closed Systems",
                "sections": [
                    "Moving Boundary Work",
                    "Energy Balance for Closed Systems"
                ]
            }
        },
        "problem_statement_raw": "Goal: Define formulas for the boundary work done by the expansion of an ideal gas in a piston cylinder device for isothermal and isobaric processes Create plots of pressure vs. volume for isothermal and isobaric expansion processes. Compare the boundary work done by isothermal and isobaric expansion processes assuming the same initial state and the same final volume.",
        "schematic_raw": "Show a piston expanding some distance. The control volume should be drawn inside of the piston cylinder.Heat should be transferred in. Work should be shown to be transferred out.",
        "physical_laws_and_assumptions": "Ideal gas law applies Neglect changes in kinetic and potential energy. Work is transferred only through boundary work ($p dV$). Moving Boundary Work $$\\delta W_\\text{b} = F \\delta s $$ If the piston is moved in a quasi-equilibrium manner, then: $$\\delta W_\\text{b} = F ds $$ $$\\delta W_\\text{b} = p A ds = p dV $$ Integrating: $$W_\\text{b} = \\int_1^2pdV \\text{ = [J]} \\tag{1}$$ We can only evaluate this integral if we know the relationship between $p$ and $V$. We need to know: $$p = f(V) $$ Pressure-Volume relationships: Polytropic In a polytropic process, we have: $$p V^n = \\text{const.} $$ From equation (1), we can then write: $$W_\\text{b} = C \\int_1^2 \\frac{1}{V^n} dV \\tag{2}$$ where, if we know the conditions at state 1, we have: $$C = p_1 V_1^n $$ If $n = 1$, as is this case for an isothermal process, we have: $$W_\\text{b} = p_1 V_1 \\ln \\frac{V_2}{V_1} $$ If $n = 0$, as is this case for an isobaric process, we have: $$W_\\text{b} = p_1 \\left( V_2 - V_1 \\right) $$ Comments $n=1$ for an isothermal process for an ideal gas because: $$ p V = m R T$$ If $T = \\text{const}$, then $m R T = \\text{const}$. We can also show that the boundary work for an isobaric process is: $$\\int_1^2pdV = p\\int_1^2dV = p (V_2 - V_1)$$",
        "solution_code": [
            {
                "step_name": "5. Properties",
                "code": "import matplotlib.pyplot as plt\nimport numpy as np\n\ninitial_pressure = 100e3 # Pa\ninitial_volume = 1     # m^3\npolytropic_index_isothermal = 1 # n = 1 for an isothermal process\npolytropic_index_isobaric = 0 # n = 0 for an isobaric process\nfinal_volume = 5       # m^3 "
            },
            {
                "step_name": "6. Calculations",
                "code": "# Define the two pressure-volume relationships\ndef pressure_isothermal(V, P1, V1, n=1):\n    \"\"\"p * V^n = constant, for n=1 (isothermal)\"\"\"\n    return P1 * (V1 / V)**n\n\ndef pressure_isobaric(V, P1):\n    \"\"\"p = constant\"\"\"\n    return P1\n\n# Define the work calculation formulas (to compare with plot area)\ndef work_isothermal(P1, V1, V2):\n    \"\"\"W_b = P1 * V1 * ln(V2/V1)\"\"\"\n    import numpy as np\n    return P1 * V1 * np.log(V2 / V1)\n\ndef work_isobaric(P1, V1, V2):\n    \"\"\"W_b = P1 * (V2 - V1)\"\"\"\n    return P1 * (V2 - V1)\n\n# Calculate the work values\nW_iso = work_isothermal(initial_pressure, initial_volume, final_volume)\nW_isobar = work_isobaric(initial_pressure, initial_volume, final_volume)\n\n# Generate volume range for plotting\nV_range = np.linspace(initial_volume, final_volume, 100)\n\n# Calculate pressures for plotting\nP_iso = pressure_isothermal(V_range, initial_pressure, initial_volume, polytropic_index_isothermal)\nP_isobar = pressure_isobaric(V_range, initial_pressure)\n\n# Plotting\nplt.figure(figsize=(8, 5))\nplt.plot(V_range, P_iso / 1000, 'r-', label='Isothermal (n=1)')\nplt.plot(V_range, P_isobar / 1000, 'b-', label='Isobaric (n=0)')\n\n# Fill area under the curves to visually represent work\nplt.fill_between(V_range, P_iso / 1000, color='r', alpha=0.1)\nplt.fill_between(V_range, P_isobar / 1000, color='b', alpha=0.1)\n\n# Add initial and final states\nplt.plot(initial_volume, initial_pressure / 1000, 'ko', label='Initial State')\nplt.plot(final_volume, P_iso[-1] / 1000, 'ro', label='Isothermal Final State')\nplt.plot(final_volume, P_isobar[-1] / 1000, 'bo', label='Isobaric Final State')\n\n# Add labels and title\nplt.xlabel('Volume V ($m^3$)')\nplt.ylabel('Pressure P (kPa)')\nplt.title('Boundary Work for Isothermal vs. Isobaric Expansion')\nplt.legend()\nplt.grid(True)\nplt.show()\n\nprint(f\"Initial State: P1 = {initial_pressure/1000:.0f} kPa, V1 = {initial_volume:.1f} m^3\")\nprint(f\"Final Volume: V2 = {final_volume:.1f} m^3\")\nprint(f\"Boundary Work for Isothermal Expansion: W_b = {W_iso:.2f} J\")\nprint(f\"Boundary Work for Isobaric Expansion: W_b = {W_isobar:.2f} J\")\nprint(f\"Work difference (Isobaric - Isothermal): {W_isobar - W_iso:.2f} J\")"
            },
            {
                "step_name": "Summary and Reasoning",
                "code": "# The summary and reasoning are in the final Markdown cell, not a code cell."
            }
        ],
        "pedagogical_summary": "Reasoning For the isothermal expansion We see that as the volume increases, the pressure decreases as $1/V$, which is what we would expect from the ideal gas law. We also see from this that we are able to relate pressure to volume for this process. That means we will be able to determine the boundary work done for such a process. This will be useful when we start to analyze cycles, such as the Carnot cycle, which has isothermal expansion and compression processes. We also see that the boundary work done in expansion is positive, which is what we expected. For the isobaric expansion We see that the work transferred out for the isobaric expansion process is larger than the isothermal, which is what we would expect since the area under the pressure-volume curve is higher for the isobaric vs. the isothermal."
    },
    {
        "problem_title": "nitrogenInternalEnergyPressureVolumePlot",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "medium"
        ],
        "topic": "Properties",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "1_r5zqwxag",
                "subtopics": [
                    {
                        "key": "Fa25-L1b-8.0",
                        "title": "Determining the properties of nitrogen"
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 3,
                "title": "Properties of Pure Substances",
                "sections": [
                    "Property Diagrams for Phase-Change Processes",
                    "The p-v-T Surface"
                ]
            },
            "notes": ""
        },
        "problem_statement_raw": "Nitrogen gas initially at $T_1 = 300 K$ and $p_1=10$ MPa undergoes an **isentropic expansion** (constant entropy, $s$) to a final pressure of $p_2=1$ MPa. Goal: Calculate the final temperature, $T_2$ and specific internal energy, $u_2$. Draw a $P-v$ diagram of the isentropic expansion process of an ideal gas.",
        "physical_laws_and_assumptions": "Ideal gas, undergoes isentropic expansion ($s_2=s_1$) Use `pyCalor` to determine nitrogens properties. Neglect kinetic and potential energy Closed system (no mass in or out) Nitrogen is treated as an ideal gas, but we will use `pyCalor` for the state-point determination to get a more accurate answer. The specific heats are a function of temperature. We will use `CoolProp` via `pyCalor` to determine the specific internal energy ($u$). Conservation of Energy: $\\Delta E_{\\text{CV}} = 0 = E_{\\text{in}} - E_{\\text{out}} = Q_{\\text{in}} - W_{\\text{out}}$ (no heat or work transferred) Boundary work (expansion) is transferred. The total energy transfer is $0$. Therefore, $\\Delta U \\neq 0$. The First Law of Thermodynamics: $$ d u = T d s - p d v $$ Therefore, the partial derivative form can be written as: $p = -\\left(\\frac{\\partial u}{\\partial v} \\right)_s$ and $T = \\left(\\frac{\\partial u}{\\partial s} \\right)_v$. We can use $p = -\\left(\\frac{\\partial u}{\\partial v} \\right)_s$ as a guide to plot the process on a $u-v$ diagram.",
        "solution_code": [
            {
                "step_name": "Properties",
                "code": "# 6. Properties (Code Cell)\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n!pip install pyCalor\nfrom pyCalor import thermo as th\n\n# Given\np1_mpa = 10\nT1_K = 300\np2_mpa = 1\nsubstance = 'nitrogen'\n\n# State 1\nst1 = th.state(substance,p=(p1_mpa*1000,'kpa'),T=(T1_K,'K'),name='1')\n\n# Isentropic process, $s_2=s_1$\ns2_kJperKgPerK = st1.s\n\n# State 2\nst2 = th.state(substance,p=(p2_mpa*1000,'kpa'),s=(s2_kJperKgPerK),name='2')\n\n# Final answers\nT2_K = st2.T\nu2_kJperKg = st2.u\n\nprint(f\"T2: {T2_K:.2f} K\")\nprint(f\"u2: {u2_kJperKg:.2f} kJ/kg\")"
            },
            {
                "step_name": "Calculations",
                "code": "# 7. Calculations (Code Cell)\n\np_MPa = np.linspace(p1_mpa, p2_mpa, 100)\n\n# Determine properties along the isentropic path\nStates_list = []\n\nfor p_i in p_MPa:\n    try:\n        st_i = th.state(substance, p=(p_i*1000, 'kpa'), s=(s2_kJperKgPerK))\n        States_list.append(st_i)\n    except:\n        print(f\"Skipping {p_i} MPa\")\n\nv_m3PerKg = np.array([st.v for st in States_list])\np_Pa = np.array([st.p for st in States_list]) * 1000\n\n# Plot the P-v diagram\nplt.figure(figsize=(8, 6))\nplt.plot(v_m3PerKg, p_Pa/1e6, 'b-', lw=2)\n\nplt.plot(st1.v, st1.p/1e6, 'o', color='red', markersize=8)\nplt.annotate('State (1)', xy=(st1.v, st1.p/1e6),\n             textcoords=\"offset points\", xytext=(-30, 10), ha='center', fontsize=12)\n\nplt.plot(st2.v, st2.p/1e6, 'o', color='red', markersize=8)\nplt.annotate('State (2)', xy=(st2.v, st2.p/1e6),\n             textcoords=\"offset points\", xytext=(-30, 10), ha='center', fontsize=12)\n\nplt.xlabel('$v$ (m^3/kg)', fontsize=14)\nplt.ylabel('$p$ (MPa)', fontsize=14)\n\nplt.grid(True)\n\nplt.xlim(0, st2.v * 1.5)\nplt.ylim(0, st1.p/1e6 * 1.2)\n\n# plt.savefig('p-v-isentropic-expansion.png')\n\n# u-v diagram plot\nplt.figure(figsize=(8, 6))\n\nu_kJPerKg = np.array([st.u for st in States_list])\n\nv12 = np.array([st.v for st in States_list])\nU12_ = np.array([st.u for st in States_list])\nplt.plot(v12,U12_, 'k-', lw=2)\n\nplt.plot(st1.v,st1.u,marker='x',markersize=10,markerfacecolor='blue', markeredgecolor='blue', )\n\nb_ = st1.u + (st1.p)*st1.v\n\nV1_ = np.linspace(st1.v-25, st1.v+25)\nU_p = -st1.p*V1_ + b_\nplt.plot(V1_,U_p, 'r--', lw=1)\n\nplt.xlabel('v (m^3/kg)')\nplt.ylabel('u (kJ/kg)')\n# plt.savefig('u-v_const_s.png')"
            }
        ],
        "pedagogical_summary": "Here we see that $p = -\\left(\\frac{\\partial u}{\\partial v} \\right)_s$ and $T = \\left(\\frac{\\partial u}{\\partial s} \\right)_v$ demonstrating that we know more than just specific internal energy and that we can describe the system with $u$, $v$, and $s$. Note that since the gas is behaving ideally, the internal energy change is only a function of temperature change ($\\Delta u = c_v \\Delta T$). Since we used the `CoolProp` library, we have a more accurate value for $T_2$ and $u_2$."
    },
    {
        "problem_title": "turbineSteamIsentropicAdiabatic",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Entropy",
        "module": "module-two",
        "notes": ".",
        "course_reference": {
            "lecture_reference": {
                "lecture_id": "",
                "subtopics": [
                    {
                        "key": "",
                        "topic": ""
                    },
                    {
                        "key": "",
                        "topic": ""
                    }
                ]
            },
            "book_reference": {
                "chapter_number": 7,
                "title": "Entropy",
                "sections": [
                    "Isentropic Processes"
                ]
            }
        },
        "problem_statement_raw": "Steam enters an adiabatic turbine at $p_1 =$ 5 MPa and $T_1 =$ 450 $^\\circ$ C and exits at $p_2 =$ 1.4 MPa. The process is reversible. Goal: Determine the work output per unit mass, $\\frac{\\dot{W}_\\text{out}}{\\dot{m}}$.",
        "physical_laws_and_assumptions": "Control Volume (mass crosses the boundary). Cannot be treated as an ideal gas. We will use pyCalor to determine properties. Neglect kinetic and potential energy ($\\Delta KE \\approx 0$, $\\Delta PE \\approx 0$). Reversible process. Adiabatic process. Steady-flow process ($\\Delta m_\\text{CV}= 0$, $\\Delta E_\\text{CV}= 0$, $\\Delta S_\\text{CV}= 0$). We have a single inlet and outlet ($\\dot{m}_\\text{in}$ and $\\dot{m}_\\text{out}$). 1. First Law of Thermodynamics (Energy Balance for Control Volume): $$\\frac{dE_\\text{CV}}{dt} = \\dot{E}_\\text{in} - \\dot{E}_\\text{out}$$ 2. Conservation of Mass (Mass Balance for a Control Volume): $$\\frac{dm_\\text{CV}}{dt} = \\dot{m}_\\text{in} - \\dot{m}_\\text{out}$$ Since this is a steady flow process, we can write: $$\\dot{E}_\\text{in} = \\dot{E}_\\text{out}$$ $$\\dot{m}_\\text{in} = \\dot{m}_\\text{out} = \\dot{m}$$ We can write our conservation of energy equation as: $$\\dot{W}_\\text{in} + \\dot{Q}_\\text{in} + \\dot{m} \\left(h_1 + \\frac{w_1^2}{2} + g z_1 \\right) = \\dot{W}_\\text{out} + \\dot{Q}_\\text{out} + \\dot{m} \\left(h_2 + \\frac{w_1^2}{2} + g z_2 \\right)$$ Neglecting kinetic and potential energy effects we can write: $$\\dot{W}_\\text{in} + \\dot{Q}_\\text{in} + \\dot{m} \\left(h_1 \\right) = \\dot{W}_\\text{out} + \\dot{Q}_\\text{out} + \\dot{m} \\left(h_2 \\right)$$ Applying the adiabatic assumption: $$\\dot{W}_\\text{in} + \\dot{m} \\left(h_1 \\right) = \\dot{W}_\\text{out} + \\dot{m} \\left(h_2 \\right)$$ Rearranging: $$ \\frac{\\dot{W}_\\text{out} - \\dot{W}_\\text{in}}{\\dot{m}} = h_1 - h_2$$ We expect that work is only transferred out, so $\\dot{W}_\\text{in} = 0$. We can then write: $$\\frac{\\dot{W}_\\text{out}}{\\dot{m}} = h_1 - h_2$$ We know $h_1$ because we have the properties at state 1. We need additional information in order to determine state 2. Since the turbine is reversible and adiabatic (no heat transfer in), then the process is isentropic. Therefore: $$s_1 = s_2$$ We can use this information to determine the enthalpy at state 2.",
        "solution_code": [
            {
                "step_name": "Properties",
                "code": "try:\n    __import__('pyCalor')\n    print(f\"Package '{'pyCalor'}' is already installed.\")\nexcept ImportError:\n    print(f\"Package '{'pyCalor'}' not found. Installing...\")\n    try:\n        subprocess.check_call([sys.executable, \"-m\", \"!pip\", \"install\", pyCalor])\n        print(f\"Package '{'pyCalor'}' installed successfully.\")\n    except subprocess.CalledProcessError as e:\n        print(f\"Error installing '{'pyCalor'}': {e}\")\n        sys.exit(1) # Exit if installation fails\n\nfrom pyCalor import thermo as th\n\n# Constants and Initial State\np1_MPa = 5 # MPa\nT1_C = 450 # C\n\np2_MPa = 1.4 # MPa\n\nsubstance = 'water'\n\n# Determine state 1\nst1 = th.state(substance,T=(T1_C,'C'),p=(p1_MPa,'Mpa'),name='1')\ns1_kJperKgPerK = st1.s\nh1_kJperKg = st1.h\n\n# Determine state 2\ns2_kJperKgPerK = s1_kJperKgPerK\nst2 = th.state(substance,s=(s2_kJperKgPerK,'kJ/kg K'),p=(p2_MPa,'Mpa'),name='2')\nh2_kJperKg = st2.h"
            },
            {
                "step_name": "Calculations",
                "code": "wOut_kJperKg = h1_kJperKg - h2_kJperKg\n\nprint(f\"Work output per unit mass: {wOut_kJperKg:.2f} kJ/kg\")"
            }
        ],
        "pedagogical_summary": "By separating flow work from total work to form the property enthalpy, the work term we calculate is then useful shaft work. The work out per unit mass is a simple formula: $$\\frac{\\dot{W}_\\text{out}}{\\dot{m}} = h_1 - h_2$$ Key Insight: For a steady flow system undergoing an adiabatic and reversible process, this can be considered as an isentropic process. That is useful because it allows us to determine the exit state of the turbine since we also know the exit pressure."
    },
    {
        "problem_title": "heatExchangerEntropyGenerationpyCalor",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "medium"
        ],
        "topic": "Entropy",
        "lecture_reference": {
            "lecture_id": "",
            "subtopics": [
                {
                    "key": "Fa25-L7c-5.0",
                    "title": "Heat exchanger entropy balance"
                }
            ]
        },
        "book_reference": {
            "chapter_number": 7,
            "title": "Entropy",
            "sections": [
                "Entropy Balance"
            ]
        },
        "notes": "",
        "problem_statement_raw": "Problem 7-141 from Cengels Thermodynamics 9th edition\n\nCold water ($c_p$ = 4.18 kJ/kg.\u00b0C) leading to a shower enters a well-insulated, thin-walled, double-pipe, counterflow heat exchanger at 10\u00b0C at a rate of 0.95 kg/s and is heated to 70\u00b0C by hot water ($c_p$ = 4.19 kJ/kg.\u00b0C) that enters at 85\u00b0C at a rate of 1.6 kg/s. \n\nDetermine (a) the rate of heat transfer and (b) the rate of entropy generation in the heat exchanger.",
        "physical_laws_and_assumptions": "Schematic\nDraw a heat exchanger that is well-insulated on the outside. There are two inlets and two outlets and the two streams do not mix, but they do transfer heat. We will say that the cold water enters the heat exchanger at state 1 and exits at state 2. We will say that the hot water enters the heat exchanger at state 3 and exits at state 4. \n\nWe will draw a control volume around the cold water pipe (states 1 to 2), which we will call Control Volume I (CVI). We will draw another control volume around the hot water pipe (states 3 to 4), which we will call Control Volume II (CVII). \n\nAssumptions and Approximations\n* Control Volume (mass crosses the boundary).\n* Cannot be treated as an ideal gas. We will use pyCalor to determine properties.\n* Neglect kinetic and potential energy ($\\Delta KE \\approx 0$, $\\Delta PE \\approx 0$).\n* The outside of the heat exchanger is assumed to be adiabatic.\n* Steady-flow process ($\\Delta m_\\text{CV}= 0$, $\\Delta E_\\text{CV}= 0$, $\\Delta S_\\text{CV}= 0$).\n* We have a single inlet and outlet ($\\dot{m}_\\text{in}$ and $\\dot{m}_\\text{out}$) for the cold water stream.\n* We have a single inlet and outlet ($\\dot{m}_\\text{in}$ and $\\dot{m}_\\text{out}$) for the hot water stream.\n* $(\\dot{Q}_\\text{in})_{12} = (\\dot{Q}_\\text{out})_{34}$\n    \nPhysical Laws and Governing Equations\nCVI: Analyze the cold water control volume. Assume steady state.\n\n$$\\dot{m}_\\text{in} = \\dot{m}_\\text{out} = \\dot{m}_\\text{cold}$$\n\n$$\\dot{E}_\\text{in} = \\dot{E}_\\text{out}$$\n\n$$\\dot{W}_\\text{in} + \\dot{Q}_\\text{in} + \\dot{m}_\\text{cold}\\left(h_1 + w_1^2/2 + gz_1 \\right) = \\dot{W}_\\text{out} + \\dot{Q}_\\text{out} + \\dot{m}_\\text{cold}\\left(h_2 + w_2^2/2 + gz_1 \\right)$$\n\nNeglecting potential and kinetic energy differences:\n\n$$\\dot{Q}_\\text{in} + \\dot{m}_\\text{cold}\\left(h_1\\right) = \\dot{m}_\\text{cold}\\left(h_2 \\right)$$\n\nDifferences in specific enthalpy can be determined by pyCalor or by specific heat at constant pressure times the temperature difference:\n\n$$(\\dot{Q}_\\text{in})_{12} = \\dot{m}_\\text{cold}\\left(h_2 - h_1 \\right) \\approx \\dot{m}_\\text{cold} c_p \\left(T_2 - T_1 \\right)$$ \n\nWith that formula we can determine the rate of heat transfer and answer part (a) of the question. It can also be shown that the heat transferred out of Control Volume II (CVII) is:\n\n$$(\\dot{Q}_\\text{out})_{34} = \\dot{m}_\\text{hot}\\left(h_3 - h_4 \\right) \\approx \\dot{m}_\\text{hot} c_p \\left(T_3 - T_4 \\right)$$ \n\nWe can now work on determining the rate of entropy generation:\n\n$\\dot{S}_\\text{in} - \\dot{S}_\\text{out} + \\dot{S}_\\text{gen} = \\frac{dS_\\text{system}}{dt}$\n\nFor this we will now combine CVI and CVII. Recall that there is no heat transfer in or out of the combined CVI and CVII. Entopy is only transferred into and out of the combined control volume through mass entering and leaving. We also assume steady state, therefore:\n\n$\\dot{m}_\\text{cold}s_1 + \\dot{m}_\\text{hot}s_3 - \\dot{m}_\\text{cold}s_2 - \\dot{m}_\\text{hot}s_4 + \\dot{S}_\\text{gen} = 0$ \n\n$\\implies  \\dot{S}_\\text{gen} = -\\dot{m}_\\text{cold}s_1 + -\\dot{m}_\\text{hot}s_3 + \\dot{m}_\\text{cold}s_2 + \\dot{m}_\\text{hot}s_4$ \n\n$\\implies  \\dot{S}_\\text{gen} = \\dot{m}_\\text{cold} \\left(s_2 - s_1 \\right)  + \\dot{m}_\\text{hot} \\left( s_4 -s_3 \\right)$",
        "solution_code": [
            {
                "step_name": "Properties",
                "code": [
                    "!pip install pyCalor",
                    "from pyCalor import thermo as th",
                    "cpCold_kJperKgperK = 4.18",
                    "cpHot_kJperKgperK = 4.19",
                    "",
                    "T1_C = 10",
                    "T2_C = 70",
                    "mdot12_kgPerS = 0.95",
                    "",
                    "T3_C = 85",
                    "mdot34_kgPerS = 1.6",
                    "",
                    "substance = 'water'"
                ]
            },
            {
                "step_name": "Calculations",
                "code": [
                    "# 6 Calculations (Code Cell)",
                    "QdotIn12_kW = mdot12_kgPerS * cpCold_kJperKgperK* (T2_C  - T1_C) ",
                    "print('(a) The rate of heat transfer into the cold water (CVI) is QdotIn12_kW = {0:1.1f} kW.'.format(QdotIn12_kW))",
                    "",
                    "# Let's compare this value with what we get when we use the property tables. ",
                    "",
                    "p1_MPa = 0.1",
                    "water_1 = th.state(substance,p=(p1_MPa,'Mpa'),T=(T1_C,'C'),name='1')",
                    "water_2 = th.state(substance,p=(p1_MPa,'Mpa'),T=(T2_C,'C'),name='2')",
                    "",
                    "QdotIn12_kW_ = mdot12_kgPerS * (water_2.h  - water_1.h)",
                    "print('(a) Alternate answer: QdotIn12_kW = {0:1.1f} kW.'.format(QdotIn12_kW_))",
                    "",
                    "# part (b)",
                    "water_3 = th.state(substance,p=(p1_MPa,'Mpa'),T=(T3_C,'C'),name='3')",
                    "",
                    "h4_kJperKg = water_3.h  - QdotIn12_kW_/mdot34_kgPerS; print(h4_kJperKg)",
                    "",
                    "water_4 = th.state(substance,p=(p1_MPa,'Mpa'),h=(h4_kJperKg,'kJ/kg'),name='4')",
                    "",
                    "Sgen_kWperK = mdot12_kgPerS*(water_2.s - water_1.s) + mdot34_kgPerS*(water_4.s - water_3.s)#; print(Sgen_kWperK)",
                    "print('(b) Sgen_kWperK = {0:1.3f} kW/K.'.format(Sgen_kWperK))"
                ]
            }
        ],
        "pedagogical_summary": "Approximating changes in enthalpy with $c_p \\Delta T$ was a good assumption for heating water. The rate of entropy generation was positive, even though the outside of the heat exchanger was well-insulated, since we were transferring heat from a hot fluid to a cold fluid."
    },
    {
        "problem_title": "electricHeatingWaterVaporConstantPressure",
        "author": "tschutzius",
        "year": "Fa25",
        "difficulty_tags": [
            "easy"
        ],
        "topic": "Closed Systems",
        "lecture_reference": {
            "lecture_id": "1_3375c5yj",
            "subtopics": [
                {
                    "key": "Fa25-L4c-1.0",
                    "title": "Electric heating of water vapor at constant pressure"
                }
            ]
        },
        "book_reference": {
            "chapter_number": 4,
            "title": "Energy Analysis of Closed Systems",
            "sections": [
                "Moving Boundary Work",
                "Energy Balance for Closed Systems"
            ]
        },
        "notes": "",
        "problem_statement_raw": "A piston cylinder contains 25 g of saturated water vapor at 300 kPa. The piston is kept at constant pressure while heat is transferred out. The cylinder contains a resistor inside of it while a voltage of 120 V is applied and 0.2 A of current passes through it for 5 min. Goal: Determine the final temperature of the steam Determine $(u_2 + p_2 v_2) - (u_1 + p_1 v_1)$",
        "physical_laws_and_assumptions": "Use `pyCalor` to determine water properties. Neglect changes in kinetic and potential energy. Closed system (no mass in or out) Conservation of energy: $$\\Delta E_\\text{CV} = E_\\text{in} - E_\\text{out} $$ $$\\Delta U + \\Delta KE + \\Delta PE = (W_\\text{in} + Q_\\text{in}) - (W_\\text{out} + Q_\\text{out}) $$ Neglect changes in kinetic and potential energy: $$\\Delta U = (W_\\text{in}) - (W_\\text{out} + Q_\\text{out}) $$ $$ W_\\text{out} = p_1 (V_2 - V_1) $$ $$ W_\\text{out} = p_1 m (v_2 - v_1) $$ $$ W_\\text{in} = \\text{V} I \\Delta t $$ Combining yields: $$m (u_2 - u_1) = \\text{V} I \\Delta t - p_1 m (v_2 - v_1) - Q_\\text{out} $$ Rearranging: $$m \\left[ \\left(u_2 + p_1 v_2\\right) - \\left( u_1 + p_1 v_1 \\right) \\right] = \\text{V} I \\Delta t - Q_\\text{out} $$ Since $p_2 = p_1$, we have: $$m \\left[ \\left(u_2 + p_2 v_2\\right) - \\left( u_1 + p_1 v_1 \\right) \\right] = \\text{V} I \\Delta t - Q_\\text{out} $$ The definition of enthalpy is: $$ h = u + p v$$ Therefore, $$m \\left[ h_2 - h_1 \\right] = \\text{V} I \\Delta t - Q_\\text{out} $$ $$h_2 = \\text{V} I \\Delta t /m - Q_\\text{out} / m + h_1$$ We need to determine the specific volumes at state 2 and state 1.",
        "solution_code": [
            {
                "step_name": "Properties (Code Cell)",
                "code": "## 5. Properties (Code Cell)\n\n!pip install pyCalor\nfrom pyCalor import thermo as th\n\n# state 1\nm_kg = 25/1000\np1_kPa = 300\nx1 = 1\n\nst1 = th.state('water', p = (p1_kPa,'kpa'), x = x1, name='1')\n\n# state 2\np2_kPa = p1_kPa\n\n# inputs\nQout_kJ = 3.7\nI_A = 0.2\nVolt_V = 120\ndt_min = 5"
            },
            {
                "step_name": "Calculations (Code Cell)",
                "code": "# 6 Calculations (Code Cell)\ndt_s = dt_min*60\n\n# Electrical work transferred in\nWdot_elec_W = Volt_V*I_A # W\nW_elec_kJ = Wdot_elec_W*dt_s/1000 # kJ\n\n# Enthalpy change, h2 - h1 (kJ/kg)\nh2_minus_h1 = (W_elec_kJ - Qout_kJ)/m_kg # kJ/kg\n\n# Enthalpy at state 2\nh1_kJperKg = st1.h # kJ/kg\nh2_kJperKg = h2_minus_h1 + h1_kJperKg # kJ/kg\nprint(h2_kJperKg)\n\n# Determine state 2 properties (T2)\nst2 = th.state('water', p = (p2_kPa,'kpa'), h = (h2_kJperKg,'kJ/kg'), name='2')\nT2_C = st2.T - 273.15\nprint('T2: {0:1.2f} deg C'.format(T2_C))\n\n# define the process using pyCalor\npr = th.process([(st1,st2)])\n\n# plot the process on a pressure-specific volume diagram\npr.plot('pv');\n\n# determine u2 + p2*v2 - (u1 + p1*v1)\nh2 = st2.u + st2.v*st2.p\nh1 = st1.u + st1.v*st1.p\n\nanswer = h2 - h1\nprint('u2 + p2*v2 - (u1 + p1*v1) = {0:1.2f} kJ/kg'.format(answer))\n\n# st2.h - st1.h #kJ/kg\nprint('h2 - h1 = {0:1.2f} kJ/kg'.format(st2.h - st1.h))"
            }
        ],
        "pedagogical_summary": "We determined the temperature of the steam at state 2. We also determined the change in enthalpy, which is equivalent to the requested quantity $(u_2 + p_2 v_2) - (u_1 + p_1 v_1)$. The final answer $u_2 + p_2 v_2 - (u_1 + p_1 v_1) = 302.26 \\text{ kJ/kg}$ is very close to the change in enthalpy $h_2 - h_1 = 302.26 \\text{ kJ/kg}$."
    }
]